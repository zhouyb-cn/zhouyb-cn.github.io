<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>美好的一天</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://zhouyanbo.com/"/>
  <updated>2020-10-27T10:16:17.713Z</updated>
  <id>https://zhouyanbo.com/</id>
  
  <author>
    <name>zhouyb90</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>惊喜的一天</title>
    <link href="https://zhouyanbo.com/2020/10/27/one-happy-day/"/>
    <id>https://zhouyanbo.com/2020/10/27/one-happy-day/</id>
    <published>2020-10-27T05:57:18.000Z</published>
    <updated>2020-10-27T10:16:17.713Z</updated>
    
    <content type="html"><![CDATA[<p>2020年10月26日，星期一，本是平凡的一天，枯燥的周一，没想到晚上来了点惊喜，十四五年没见的同学突然联系上了。</p><p>初中在离家挺远的安国上学，认识了好多朋友，但是初中毕业以后就回家上学了，好多人慢慢失去了联系，晚上几个常在安国本地的同学聚在一起，想起了我，其中一人留有我的联系方式，还是上大学加上的，给我开了视频，让我一个一个说名字，说实话，好多年了，名字突然叫不上来，但是看着面容都能认出来，还有原来的影子，最大的特点就是全部变胖了。</p><p>有太多的话题，激动的说不出话来，有点想哭的感觉，当时大家在一起玩的很好，关系都不错，只是没有联系了，再联系还是感觉很亲切，大家都喝多了，跟他们视频完脑海中一直浮现十四五年前的画面。</p><p>初中离家远，老师同学都很照顾我，很感激！</p><p>最后约定找时间一定见面好好叙叙旧，太想念大家了，初中的友谊真的深，大部分关系都很好，越往后年龄越大，交心的朋友越来越少了，尤其工作以后，在北京这个快节奏的城市中，大家忙忙碌碌，没有了生活，这一瞬间让人忘记了生活的烦恼，全是对过去美好的回忆，真的很好，无法入眠的一夜。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;2020年10月26日，星期一，本是平凡的一天，枯燥的周一，没想到晚上来了点惊喜，十四五年没见的同学突然联系上了。&lt;/p&gt;
&lt;p&gt;初中在离家挺远的安国上学，认识了好多朋友，但是初中毕业以后就回家上学了，好多人慢慢失去了联系，晚上几个常在安国本地的同学聚在一起，想起了我，其中
      
    
    </summary>
    
    
      <category term="生活" scheme="https://zhouyanbo.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>leetcode -- 前缀树</title>
    <link href="https://zhouyanbo.com/2020/09/23/trie-prefix-tree/"/>
    <id>https://zhouyanbo.com/2020/09/23/trie-prefix-tree/</id>
    <published>2020-09-23T09:59:25.000Z</published>
    <updated>2020-09-23T10:12:07.613Z</updated>
    
    <content type="html"><![CDATA[<p>leetcode上的一道设计题，要求实现trie这种数据结构，包含插入、查找、前缀查找的操作<br><a href="https://leetcode-cn.com/problems/implement-trie-prefix-tree/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/implement-trie-prefix-tree/</a></p><p>首先定义Trie struct</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Trie <span class="keyword">struct</span> &#123;</span><br><span class="line">    children []*Trie</span><br><span class="line">    isWord <span class="keyword">bool</span> <span class="comment">//是否为单词 </span></span><br><span class="line">    part <span class="keyword">byte</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>children 保存的是当前节点的所有子节点</p><p>isWord 如果当前节点为单词结束，标记为true</p><p>part 记录当前节点的字符，为byte类型</p><h4 id="Insert-插入操作"><a href="#Insert-插入操作" class="headerlink" title="Insert 插入操作"></a>Insert 插入操作</h4><p>遍历要插入的单词word，判断每一个字符是否出现在children中，如果出现了，继续往下遍历，没有出现，则新建一个节点，并且放入当前节点的children中</p><p>结束条件则为遍历的层数跟给定的单词长度一致，并且标记当前节点的isWord属性为true，代表这是一个单词</p><h4 id="Search-查询操作"><a href="#Search-查询操作" class="headerlink" title="Search 查询操作"></a>Search 查询操作</h4><p>同样是遍历所有的children，如果包含当前字符，则继续向下遍历，不包含则结束遍历，返回找不到，当遍历到单词长度的深度的时候，需要判断当前节点的isWord属性是否为true，只有为true的时候才是一个单词，否则返回找不到</p><h4 id="StartsWith-判断以给定的prefix开头"><a href="#StartsWith-判断以给定的prefix开头" class="headerlink" title="StartsWith 判断以给定的prefix开头"></a>StartsWith 判断以给定的prefix开头</h4><p>同search操作相同，只是遍历到最后不需要判断当前节点的isWord属性</p><p>完整代码如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Trie <span class="keyword">struct</span> &#123;</span><br><span class="line">    children []*Trie</span><br><span class="line">    isWord <span class="keyword">bool</span> <span class="comment">//是否为单词 </span></span><br><span class="line">    part <span class="keyword">byte</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/** Initialize your data structure here. */</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Constructor</span><span class="params">()</span> <span class="title">Trie</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> Trie&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/** Inserts a word into the trie. */</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(this *Trie)</span> <span class="title">Insert</span><span class="params">(word <span class="keyword">string</span>)</span></span>  &#123;</span><br><span class="line">    this.insert(word, <span class="number">0</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(this *Trie)</span> <span class="title">insert</span><span class="params">(word <span class="keyword">string</span>, height <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(word) == height &#123;</span><br><span class="line">        this.isWord = <span class="literal">true</span></span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 取一个字母查找</span></span><br><span class="line">    w := word[height]</span><br><span class="line">    child := this.matchChild(w)</span><br><span class="line">    <span class="comment">// 不存在新建一个节点加入</span></span><br><span class="line">    <span class="keyword">if</span> child == <span class="literal">nil</span> &#123;</span><br><span class="line">        child = &amp;Trie&#123;part: w&#125;</span><br><span class="line">        this.children = <span class="built_in">append</span>(this.children, child)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 继续遍历下一级</span></span><br><span class="line">    child.insert(word, height + <span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(this *Trie)</span> <span class="title">matchChild</span><span class="params">(w <span class="keyword">byte</span>)</span> *<span class="title">Trie</span></span> &#123;</span><br><span class="line">    <span class="keyword">for</span> _, child := <span class="keyword">range</span> this.children &#123;</span><br><span class="line">        <span class="keyword">if</span> child.part == w &#123;</span><br><span class="line">            <span class="keyword">return</span> child</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns if the word is in the trie. */</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(this *Trie)</span> <span class="title">Search</span><span class="params">(word <span class="keyword">string</span>)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> this.search(word, <span class="number">0</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(this *Trie)</span> <span class="title">search</span><span class="params">(word <span class="keyword">string</span>, height <span class="keyword">int</span>)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(word) == height &#123;</span><br><span class="line">        <span class="keyword">if</span> this.isWord &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> _, child := <span class="keyword">range</span> this.children &#123;</span><br><span class="line">        <span class="keyword">if</span> child.part == word[height] &#123;</span><br><span class="line">            <span class="keyword">return</span> child.search(word, height + <span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/** Returns if there is any word in the trie that starts with the given prefix. */</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(this *Trie)</span> <span class="title">StartsWith</span><span class="params">(prefix <span class="keyword">string</span>)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> this.searchStartsWith(prefix, <span class="number">0</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(this *Trie)</span> <span class="title">searchStartsWith</span><span class="params">(word <span class="keyword">string</span>, height <span class="keyword">int</span>)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(word) == height &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> _, child := <span class="keyword">range</span> this.children &#123;</span><br><span class="line">        <span class="keyword">if</span> child.part == word[height] &#123;</span><br><span class="line">            <span class="keyword">return</span> child.searchStartsWith(word, height + <span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Your Trie object will be instantiated and called as such:</span></span><br><span class="line"><span class="comment"> * obj := Constructor();</span></span><br><span class="line"><span class="comment"> * obj.Insert(word);</span></span><br><span class="line"><span class="comment"> * param_2 := obj.Search(word);</span></span><br><span class="line"><span class="comment"> * param_3 := obj.StartsWith(prefix);</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;leetcode上的一道设计题，要求实现trie这种数据结构，包含插入、查找、前缀查找的操作&lt;br&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/implement-trie-prefix-tree/&quot; target=&quot;_blank&quot; 
      
    
    </summary>
    
    
      <category term="algorithm" scheme="https://zhouyanbo.com/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>下半年的一些计划</title>
    <link href="https://zhouyanbo.com/2019/07/15/next-half-year-plan/"/>
    <id>https://zhouyanbo.com/2019/07/15/next-half-year-plan/</id>
    <published>2019-07-15T06:07:48.000Z</published>
    <updated>2020-10-27T06:12:18.469Z</updated>
    
    <content type="html"><![CDATA[<p>越来越觉得自己进步很慢了，几乎停止不前了，大城市的焦虑、生活的琐碎搞的整个人都比较消沉，需要找点事情做，找个感兴趣的事情。</p><p>准备看看数据结构、算法，虽说工作中用不到，但是觉得挺有用的，能理解很多东西，觉得挺有意思，而且现在有很多刷题的网站，能够做出来也会有些喜悦。</p><p>接下来就坚持学习算法，每日做题了，充实！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;越来越觉得自己进步很慢了，几乎停止不前了，大城市的焦虑、生活的琐碎搞的整个人都比较消沉，需要找点事情做，找个感兴趣的事情。&lt;/p&gt;
&lt;p&gt;准备看看数据结构、算法，虽说工作中用不到，但是觉得挺有用的，能理解很多东西，觉得挺有意思，而且现在有很多刷题的网站，能够做出来也会有些喜
      
    
    </summary>
    
    
      <category term="生活" scheme="https://zhouyanbo.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>近况</title>
    <link href="https://zhouyanbo.com/2019/06/20/mid-year-thoughts/"/>
    <id>https://zhouyanbo.com/2019/06/20/mid-year-thoughts/</id>
    <published>2019-06-20T06:04:47.000Z</published>
    <updated>2020-10-27T10:56:31.796Z</updated>
    
    <content type="html"><![CDATA[<p>转眼19年过去了一半了，回想这半年好像也没做啥，时间过的就是这么快。</p><p>想想自己都要三十了，不敢想啊，可怕。</p><p>毕业也5年过去了，有时候总是会回想自己工作的这几年，开始进步还挺大，后来越来越小，有考虑自身的原因，也想过所在环境的问题，都有吧，主要还在于自己，对自己有些认知。</p><p>年龄越大，琐事越来越多，自己不够自信，可能从小没有培养出来，我哥一直安慰我，哈哈哈。</p><p>接下来继续努力，有进步就可以，平平淡淡。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;转眼19年过去了一半了，回想这半年好像也没做啥，时间过的就是这么快。&lt;/p&gt;
&lt;p&gt;想想自己都要三十了，不敢想啊，可怕。&lt;/p&gt;
&lt;p&gt;毕业也5年过去了，有时候总是会回想自己工作的这几年，开始进步还挺大，后来越来越小，有考虑自身的原因，也想过所在环境的问题，都有吧，主要还在
      
    
    </summary>
    
    
      <category term="生活" scheme="https://zhouyanbo.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>有趣的乘法</title>
    <link href="https://zhouyanbo.com/2019/01/08/recursive-mulitply/"/>
    <id>https://zhouyanbo.com/2019/01/08/recursive-mulitply/</id>
    <published>2019-01-08T03:14:35.000Z</published>
    <updated>2020-09-09T07:25:20.891Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>leetcode算法思路</p></blockquote><p>leetcode地址：<a href="https://leetcode-cn.com/problems/recursive-mulitply-lcci/" target="_blank" rel="noopener">递归乘法</a> </p><p>该题让用递归的方法求乘法的结果，要求不要用 * 运算符，可以使用加、减、位移</p><p>题目比较简单，把乘法换成加法去做</p><p>解法1:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">multiply</span><span class="params">(<span class="keyword">int</span> A, <span class="keyword">int</span> B)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// A * B = (A&lt;&lt;1)(b&gt;&gt;1) + A(B%2)</span></span><br><span class="line">        <span class="keyword">if</span> (B == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (B == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> A;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> multiply(A, B-<span class="number">1</span>) + A;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/Users/yanbo/Library/Application Support/typora-user-images/image-20200909112413655.png" alt="image-20200909112413655"></p><p>在题解中看到一种换算成位运算的操作A * B = (A&lt;&lt;1)(b&gt;&gt;1) + A(B%2)，结果内存消耗稍稍少了一点</p><p>解法2:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">multiply</span><span class="params">(<span class="keyword">int</span> A, <span class="keyword">int</span> B)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// A * B = (A&lt;&lt;1)(b&gt;&gt;1) + A(B%2)</span></span><br><span class="line">        <span class="keyword">if</span> (B == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (B == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> A;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (B % <span class="number">2</span> == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> multiply(A&lt;&lt;<span class="number">1</span>, B&gt;&gt;<span class="number">1</span>) + A;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> multiply(A&lt;&lt;<span class="number">1</span>, B&gt;&gt;<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/Users/yanbo/Library/Application Support/typora-user-images/image-20200909112245826.png" alt="image-20200909112245826"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;leetcode算法思路&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;leetcode地址：&lt;a href=&quot;https://leetcode-cn.com/problems/recursive-mulitply-lcci/&quot; target=&quot;_bl
      
    
    </summary>
    
    
      <category term="algorithm" scheme="https://zhouyanbo.com/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>2018 年终总结</title>
    <link href="https://zhouyanbo.com/2018/12/10/2018-summary/"/>
    <id>https://zhouyanbo.com/2018/12/10/2018-summary/</id>
    <published>2018-12-10T08:28:37.000Z</published>
    <updated>2020-09-09T07:25:19.007Z</updated>
    
    <content type="html"><![CDATA[<p>2018就要结束了，总会想起2010年上大学的情景，当时年末还在想明年就是2011年，这个念起来好拗口，一眨眼2018年都要结束了，回顾这一年。。。</p><p>加油吧！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;2018就要结束了，总会想起2010年上大学的情景，当时年末还在想明年就是2011年，这个念起来好拗口，一眨眼2018年都要结束了，回顾这一年。。。&lt;/p&gt;
&lt;p&gt;加油吧！！！&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="other" scheme="https://zhouyanbo.com/tags/other/"/>
    
  </entry>
  
  <entry>
    <title>程序员的自动化</title>
    <link href="https://zhouyanbo.com/2018/11/20/programmer-automation/"/>
    <id>https://zhouyanbo.com/2018/11/20/programmer-automation/</id>
    <published>2018-11-20T08:35:11.000Z</published>
    <updated>2020-09-09T07:26:26.401Z</updated>
    
    <content type="html"><![CDATA[<p>18年是个多病的年，妈妈从年初腿部肿，找了好多医院医生现在吃药也没根治。随着现在电子设备的普及，电脑、手机重度使用者，导致现在眼睛疾病越来越多。先是室友眼睛有问题，寻医问药很多地方，最后拖的时间长了，做了手术恢复中，恢复的挺不错，又是我女朋友突然一天说眼睛不舒服，感觉磨的厉害睁不开眼，赶紧带去医院，最后诊断为干眼症，好在及时发现，医生开了些药需要慢慢调理，是个长期的病，以后用眼都要注意休息了。</p><p>经过这次事情之后，毕竟班还是要上的，医生也不建议丢了工作，平时工作就需要多多注意了，但是毕竟天天面对电脑也很无奈，女朋友在一家知识产权公司做文职工作，在我看来没什么技术含量也没啥提升的空间，尽早离开为好，放在年后考虑了，只是目前有一份每天都要整理邮件的工作，最初几天我去公司帮忙弄了下，去了一次我眼睛都要瞎了，windows电脑，屏幕小，分辨率低，实在是受不了，更别说她现在眼睛还不好，于是到家想了下写个程序能提高一些效率，于是便有了下文的产出。</p><p>首先邮件是outlook导出的.msg后缀的文件，本人电脑Mac Pro无奈打不开这种格式，还花钱买了MailReader软件，后来发现没有必要，分析了下需求准备用python写一个简单的处理脚本，本人平时也不接触python，写的比较垃圾，大家不要在意细节。</p><p>主要记录一下使用的关键package，其它的都是一些细节的需求，没有什么难度，无非是一些字符串的处理，循环，文件处理，最大的问题就是没有办法读取到邮件的主题，千辛万苦最后找到了一个包 <a href="https://github.com/mattgwwalker/msg-extractor" target="_blank" rel="noopener">extract_msg</a> 需要的依赖也比较多，一一安装好就可以，主要用到了它的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">msg = extract_msg.Message(<span class="string">"path/to/msg/file.msg"</span>, attachmentClass = CustomAttachmentClass)</span><br><span class="line"><span class="comment"># get mail subject</span></span><br><span class="line">subject = msg.subject</span><br></pre></td></tr></table></figure><p>其中是用了python的一个web框架 Django 初次使用，没有深入研究，另外前端页面没有写，本来打算找个前端UI框架的，最后放弃了，没有耽误功夫在前端上，主要实现了功能，后期有时间再补上。</p><p>代码上传到了 <a href="https://github.com/zhouyb-cn/mail-system-tool" target="_blank" rel="noopener">Github</a> </p><p>接下来需要有时间待完成的：</p><ol><li>自动识别邮件主题中的卷号</li><li>做一个漂亮的前端界面</li><li>后续优化</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;18年是个多病的年，妈妈从年初腿部肿，找了好多医院医生现在吃药也没根治。随着现在电子设备的普及，电脑、手机重度使用者，导致现在眼睛疾病越来越多。先是室友眼睛有问题，寻医问药很多地方，最后拖的时间长了，做了手术恢复中，恢复的挺不错，又是我女朋友突然一天说眼睛不舒服，感觉磨的厉
      
    
    </summary>
    
    
      <category term="geek" scheme="https://zhouyanbo.com/tags/geek/"/>
    
  </entry>
  
  <entry>
    <title>生命不息，折腾不止</title>
    <link href="https://zhouyanbo.com/2018/10/10/geek-funny-thing/"/>
    <id>https://zhouyanbo.com/2018/10/10/geek-funny-thing/</id>
    <published>2018-10-10T08:37:56.000Z</published>
    <updated>2020-09-08T07:08:35.310Z</updated>
    
    <content type="html"><![CDATA[<p>最近老大提起了一个说很好玩的聊天客户端<a href="https://weechat.org/" target="_blank" rel="noopener">weechat</a>，说是很Geek，让我研究下给大家做一下分享，下面记录一下过程。</p><p>网上搜索了如何能够在weechat中收发微信消息，最初有点一头雾水，无从下手，只是知道weecaht是一个IRC客户端，官方首页的说明</p><blockquote><p>WeeChat, the extensible chat client.</p></blockquote><blockquote><p>Fast — Light — Free software</p></blockquote><p>轻量级的开源的软件，听说很多大佬在用（大佬都是在用一些看起来很高大上的东西）</p><p>按照<a href="https://weechat.org/files/doc/stable/weechat_user.en.html" target="_blank" rel="noopener">官方文档</a>一步一步来就可以，文档写的很清晰，只是需要花点时间理解weechat是做什么的就可以了，实际上比较简单，weecaht只是一个IRC客户端，IRC客户端也有很多，可以选择其它的客户端，weechat可扩展性比较大，装好weechat之后，又在github上找了一个控制网页微信来收发微信的库，在这里<a href="https://github.com/MaskRay/wechatircd" target="_blank" rel="noopener">https://github.com/MaskRay/wechatircd</a>，按照Readme操作就可以，最后创建一个wechat server</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/connect wechat</span><br></pre></td></tr></table></figure><p>即可加载到网页微信端的所有消息，并且可以是现在terminal中收发消息，看起来很高大上，并且可以随时查看以前的消息，都有日志记录，不方便的是对图片、音频、文件收发不太方便，显示到Terminal都是链接形式，</p><p>效果如下：</p><p><img src="/Users/yanbo/Desktop/屏幕快照 2018-12-29 下午4.15.58.png" alt="weechat"></p><hr><p>2018.12.28 补充：</p><p>升级了电脑系统到10.14.2，发现无法显示中文字符，输入中文也无法显示了，都变成了？ 查了资料应该是编码问题，最后升级了iTerm2到最新版本发现解决了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近老大提起了一个说很好玩的聊天客户端&lt;a href=&quot;https://weechat.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;weechat&lt;/a&gt;，说是很Geek，让我研究下给大家做一下分享，下面记录一下过程。&lt;/p&gt;
&lt;p&gt;网上搜索了
      
    
    </summary>
    
    
      <category term="geek" scheme="https://zhouyanbo.com/tags/geek/"/>
    
  </entry>
  
  <entry>
    <title>创意</title>
    <link href="https://zhouyanbo.com/2018/09/10/some-original-ideas/"/>
    <id>https://zhouyanbo.com/2018/09/10/some-original-ideas/</id>
    <published>2018-09-10T08:40:07.000Z</published>
    <updated>2020-09-09T07:27:02.205Z</updated>
    
    <content type="html"><![CDATA[<p>想一些有创意的ideas</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;想一些有创意的ideas&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="other" scheme="https://zhouyanbo.com/tags/other/"/>
    
  </entry>
  
  <entry>
    <title>使用libreoffice转换文档成pdf</title>
    <link href="https://zhouyanbo.com/2018/07/18/libreoffice/"/>
    <id>https://zhouyanbo.com/2018/07/18/libreoffice/</id>
    <published>2018-07-18T09:03:07.000Z</published>
    <updated>2020-09-09T07:25:11.801Z</updated>
    
    <content type="html"><![CDATA[<h3 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h3><p>将doc、docx、xls、xlsx、ppt、pptx格式的转换成pdf文档</p><h3 id="实施"><a href="#实施" class="headerlink" title="实施"></a>实施</h3><p>系统是centos 7，这里使用libreoffice，在转换过程中发现，只要是文件中包含中文字符，转换之后文件中成了乱码，不可读</p><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>由于centos 7系统中缺少对中文的支持，需要安装中文字库，参考这里<a href="https://blog.csdn.net/wlwlwlwl015/article/details/51482065" target="_blank" rel="noopener">centos安装中文字库</a>，<br>安装完成后重启libreoffice即可</p><p>附：<a href="https://github.com/lugnsk/pyodconverter" target="_blank" rel="noopener">转换脚本</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;需求&quot;&gt;&lt;a href=&quot;#需求&quot; class=&quot;headerlink&quot; title=&quot;需求&quot;&gt;&lt;/a&gt;需求&lt;/h3&gt;&lt;p&gt;将doc、docx、xls、xlsx、ppt、pptx格式的转换成pdf文档&lt;/p&gt;
&lt;h3 id=&quot;实施&quot;&gt;&lt;a href=&quot;#实施&quot; c
      
    
    </summary>
    
    
      <category term="linux" scheme="https://zhouyanbo.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Dropbox 同步问题</title>
    <link href="https://zhouyanbo.com/2018/05/20/dropbox-synchronization/"/>
    <id>https://zhouyanbo.com/2018/05/20/dropbox-synchronization/</id>
    <published>2018-05-20T07:26:12.000Z</published>
    <updated>2020-09-09T07:25:16.300Z</updated>
    
    <content type="html"><![CDATA[<p>最初的时候下载了 <a href="https://dropbox.com/" target="_blank" rel="noopener">Dropbox</a> 做为我重要资料的网盘备份，可是最大的问题就是Dropbox的联网问题，众所周知此工具是被限制的，只能想一些办法FQ才可以使用，后来无奈从电脑上删除了，最近几天在整理<a href="http://1password.com" target="_blank" rel="noopener">1password</a>备份的时候，觉得icloud有点问题（原先使用icloud做备份），而且今年<a href="https://www.icloud.com" target="_blank" rel="noopener">icloud</a>中国由云上贵州运营了，也曝出了一些不好的新闻，不知真假，虽然我也在用icloud的免费5G的空间，反正也没有放什么隐私的材料照片，也就无所谓了，密码这个东西还是需要注意些，比较了一下Dropbox相对安全一些，决定重新捡起Dropbox。</p><p>此站点我是用的<a href="https://welcome.linode.com" target="_blank" rel="noopener">Linode</a>，每个月$5对我来说足够了（没什么浏览量），我在上面部署了ss服务，本地Mac安装ss客户端，添加服务器，选择自动代理模式，由于服务器在日本，延迟200多ms还算可以，基本的Google查询还是可以接受的。</p><p>下载Dropbox，安装在本地，安装好之后发现即使开启了ss还是一直处在连接中的状态，无法连接到服务器，于是在网上找到了方法，首先找到ss的自动模式的PAC文件 gfwlist.js，打来看到其中有一行</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> proxy = <span class="string">"SOCKS5 127.0.0.1:1080; SOCKS 127.0.0.1:1080; DIRECT;"</span>;</span><br></pre></td></tr></table></figure><p>根据每个人的不同配置跟我的不一样，仅供参考，接着打开Dropbox的偏好设置，找到网络 –&gt; 代理服务器，点击更改设置，选择手动，代理服务器类型：SOCKET5，服务器端口号写上就可以了，点击更新，过几秒发现Dropbox可以连接了</p><p>1password在偏好设置中选择同步方式为Dropbox，我只是在Mac跟iphone之间同步，iphone上开启代理即可，经试验，同步还是很快的，可以开心的使用了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最初的时候下载了 &lt;a href=&quot;https://dropbox.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Dropbox&lt;/a&gt; 做为我重要资料的网盘备份，可是最大的问题就是Dropbox的联网问题，众所周知此工具是被限制的，只能想一些办
      
    
    </summary>
    
    
      <category term="dropbox" scheme="https://zhouyanbo.com/tags/dropbox/"/>
    
  </entry>
  
  <entry>
    <title>image storage server</title>
    <link href="https://zhouyanbo.com/2018/04/10/image-storage-server/"/>
    <id>https://zhouyanbo.com/2018/04/10/image-storage-server/</id>
    <published>2018-04-10T08:44:10.000Z</published>
    <updated>2020-09-09T07:25:13.131Z</updated>
    
    <content type="html"><![CDATA[<p>最近发现个人博客网站很少用到图，存储到一些云服务厂商不知道哪天就给封了，还是放在自己服务器比较安全，决定找时间在现有的<a href="http://img.zhouyanbo.com/" target="_blank" rel="noopener">图片站点</a>加上图片上传功能。</p><h4 id="Todo"><a href="#Todo" class="headerlink" title="Todo"></a>Todo</h4><ul><li>图片上传服务</li><li>考虑服务器安全备份问题</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近发现个人博客网站很少用到图，存储到一些云服务厂商不知道哪天就给封了，还是放在自己服务器比较安全，决定找时间在现有的&lt;a href=&quot;http://img.zhouyanbo.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;图片站点&lt;/a&gt;加上图
      
    
    </summary>
    
    
      <category term="php" scheme="https://zhouyanbo.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>基本排序算法</title>
    <link href="https://zhouyanbo.com/2018/02/26/sorting-algorithm/"/>
    <id>https://zhouyanbo.com/2018/02/26/sorting-algorithm/</id>
    <published>2018-02-26T03:30:42.000Z</published>
    <updated>2020-09-08T07:08:35.312Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、冒泡排序"><a href="#一、冒泡排序" class="headerlink" title="一、冒泡排序"></a>一、冒泡排序</h3><p>冒泡排序（Bubble Sort），是一种计算机科学领域的较简单的排序算法。<br>它重复地走访过要排序的数列，一次比较两个元素，如果他们的顺序错误就把他们交换过来。走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。<br>这个算法的名字由来是因为越大的元素会经由交换慢慢“浮”到数列的顶端，故名</p><h4 id="算法原理"><a href="#算法原理" class="headerlink" title="算法原理"></a>算法原理</h4><ol><li>比较相邻的元素。如果第一个比第二个大，就交换他们两个。</li><li>对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对。在这一点，最后的元素应该会是最大的数。</li><li>针对所有的元素重复以上的步骤，除了最后一个。</li><li>持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bubble_sort</span><span class="params">(list)</span>:</span></span><br><span class="line">    length = len(list)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(length):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>, length-i):</span><br><span class="line">            <span class="keyword">if</span> list[j<span class="number">-1</span>] &gt; list[j]:</span><br><span class="line">                list[j<span class="number">-1</span>], list[j] = list[j], list[j<span class="number">-1</span>]</span><br><span class="line">    <span class="keyword">return</span> list</span><br></pre></td></tr></table></figure><h3 id="二、冒泡排序"><a href="#二、冒泡排序" class="headerlink" title="二、冒泡排序"></a>二、冒泡排序</h3><p>冒泡排序（Bubble Sort），是一种计算机科学领域的较简单的排序算法。<br>它重复地走访过要排序的数列，一次比较两个元素，如果他们的顺序错误就把他们交换过来。走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。<br>这个算法的名字由来是因为越大的元素会经由交换慢慢“浮”到数列的顶端，故名</p><h4 id="算法原理-1"><a href="#算法原理-1" class="headerlink" title="算法原理"></a>算法原理</h4><ol><li>比较相邻的元素。如果第一个比第二个大，就交换他们两个。</li><li>对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对。在这一点，最后的元素应该会是最大的数。</li><li>针对所有的元素重复以上的步骤，除了最后一个。</li><li>持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bubble_sort</span><span class="params">(list)</span>:</span></span><br><span class="line">    length = len(list)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(length):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>, length-i):</span><br><span class="line">            <span class="keyword">if</span> list[j<span class="number">-1</span>] &gt; list[j]:</span><br><span class="line">                list[j<span class="number">-1</span>], list[j] = list[j], list[j<span class="number">-1</span>]</span><br><span class="line">    <span class="keyword">return</span> list</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;一、冒泡排序&quot;&gt;&lt;a href=&quot;#一、冒泡排序&quot; class=&quot;headerlink&quot; title=&quot;一、冒泡排序&quot;&gt;&lt;/a&gt;一、冒泡排序&lt;/h3&gt;&lt;p&gt;冒泡排序（Bubble Sort），是一种计算机科学领域的较简单的排序算法。&lt;br&gt;它重复地走访过要排序的数
      
    
    </summary>
    
    
      <category term="algorithm" scheme="https://zhouyanbo.com/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>升级站点php版本到7.2.1</title>
    <link href="https://zhouyanbo.com/2018/02/01/upgrade-php-to-7/"/>
    <id>https://zhouyanbo.com/2018/02/01/upgrade-php-to-7/</id>
    <published>2018-02-01T07:30:49.000Z</published>
    <updated>2020-09-09T07:27:17.009Z</updated>
    
    <content type="html"><![CDATA[<p>php7已经问世两年多了，都说性能提升了不少，可开发一直在使用php5.6，最近考虑把自己站点的php版本升级一下，目前站点的php版本是5.6.31</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">~$ php -v</span><br><span class="line">PHP 5.6.31 (cli) (built: Sep 14 2017 18:12:46)</span><br><span class="line">Copyright (c) 1997-2016 The PHP Group</span><br><span class="line">Zend Engine v2.6.0, Copyright (c) 1998-2016 Zend Technologies</span><br><span class="line">    with Zend OPcache v7.0.6-dev, Copyright (c) 1999-2016, by Zend Technologies</span><br></pre></td></tr></table></figure><p><a href="http://php.net/downloads.php" target="_blank" rel="noopener">php download</a>目前官网的稳定版本是7.2.1，下面记录下升级过程</p><a id="more"></a><p>目前版本5.6.31是通过yum安装的，php7我想通过源码安装</p><ol><li>首先先在本地下载源码包，通过rsync命令上传到服务器某个目录</li><li><p>按照官方文档的安装步骤<a href="http://php.net/manual/zh/install.unix.nginx.php" target="_blank" rel="noopener">php install</a>解压</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar zxf php-x.x.x</span><br></pre></td></tr></table></figure></li><li><p>配置并构建，参考了<a href="http://blog.51cto.com/jinchuang/1897385" target="_blank" rel="noopener">这里</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">cd ../php-x.x.x</span><br><span class="line">./configure \</span><br><span class="line">--prefix=/usr/local/php7 \</span><br><span class="line">--with-fpm-user=nginx \</span><br><span class="line">--with-fpm-group=nginx \</span><br><span class="line">--with-bz2 \</span><br><span class="line">--with-curl \</span><br><span class="line">--with-gd \</span><br><span class="line">--with-openssl \</span><br><span class="line">--with-mhash \</span><br><span class="line">--with-jpeg-dir \</span><br><span class="line">--with-png-dir \</span><br><span class="line">--with-freetype-dir \</span><br><span class="line">--with-iconv-dir=/usr/local/libiconv \</span><br><span class="line">--with-gettext \</span><br><span class="line">--with-libxml-dir \</span><br><span class="line">--with-zlib \</span><br><span class="line">--with-xmlrpc \</span><br><span class="line">--with-pcre-regex \</span><br><span class="line">--with-pear \</span><br><span class="line">--with-pdo-mysql=mysqlnd \</span><br><span class="line">--with-mysqli=mysqlnd \</span><br><span class="line">--with-libdir=lib64 \</span><br><span class="line">--enable-dom \</span><br><span class="line">--enable-xml \</span><br><span class="line">--enable-fpm \</span><br><span class="line">--enable-bcmath \</span><br><span class="line">--enable-ftp \</span><br><span class="line">--enable-sockets \</span><br><span class="line">--disable-ipv6 \</span><br><span class="line">--enable-mbregex \</span><br><span class="line">--enable-mbstring \</span><br><span class="line">--enable-calendar \</span><br><span class="line">--enable-static \</span><br><span class="line">--enable-fpm \</span><br><span class="line">--enable-bcmath \</span><br><span class="line">--enable-libxml \</span><br><span class="line">--enable-inline-optimization \</span><br><span class="line">--enable-mbregex \</span><br><span class="line">--enable-opcache \</span><br><span class="line">--enable-pcntl \</span><br><span class="line">--enable-shmop \</span><br><span class="line">--enable-soap \</span><br><span class="line">--enable-sockets \</span><br><span class="line">--enable-sysvsem \</span><br><span class="line">--enable-zip \</span><br><span class="line"></span><br><span class="line">make &amp; make install</span><br></pre></td></tr></table></figure></li><li><p>创建配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">cp php.ini-development /usr/local/php7/php.ini</span><br><span class="line">cp /usr/local/php7/etc/php-fpm.conf.default /usr/local/php7/etc/php-fpm.conf</span><br><span class="line">cp /usr/local/php7/etc/php-fpm.d/www.conf.default /usr/local/php7/etc/php-fpm.d/www.conf</span><br><span class="line">// 方法1</span><br><span class="line">cp -R sapi/fpm/init.d.php-fpm /etc/init.d/php-fpm</span><br><span class="line">// 如果没有权限启动</span><br><span class="line">cd /etc/init.d/php-fpm</span><br><span class="line">chmod 755 php-fpm</span><br><span class="line">//启动停止</span><br><span class="line">/etc/init.d/php-fpm start|stop</span><br><span class="line">// 方法2</span><br><span class="line">cp php-7.2.1/sapi/fpm/php-fpm /usr/local/bin/</span><br><span class="line">//启动停止</span><br><span class="line">php-fpm | pkill php-fpm</span><br></pre></td></tr></table></figure></li><li><p>查看</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">~$ php -v</span><br><span class="line">PHP 7.2.1 (fpm-fcgi) (built: Jan 30 2018 17:06:46)</span><br><span class="line">Copyright (c) 1997-2017 The PHP Group</span><br><span class="line">Zend Engine v3.2.0, Copyright (c) 1998-2017 Zend Technologies</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;php7已经问世两年多了，都说性能提升了不少，可开发一直在使用php5.6，最近考虑把自己站点的php版本升级一下，目前站点的php版本是5.6.31&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~$ php -v&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PHP 5.6.31 (cli) (built: Sep 14 2017 18:12:46)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Copyright (c) 1997-2016 The PHP Group&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Zend Engine v2.6.0, Copyright (c) 1998-2016 Zend Technologies&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    with Zend OPcache v7.0.6-dev, Copyright (c) 1999-2016, by Zend Technologies&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://php.net/downloads.php&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;php download&lt;/a&gt;目前官网的稳定版本是7.2.1，下面记录下升级过程&lt;/p&gt;
    
    </summary>
    
    
      <category term="php" scheme="https://zhouyanbo.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>mysql 分页数据重复</title>
    <link href="https://zhouyanbo.com/2018/02/01/mysql-data-duplicate/"/>
    <id>https://zhouyanbo.com/2018/02/01/mysql-data-duplicate/</id>
    <published>2018-02-01T07:17:34.000Z</published>
    <updated>2020-09-08T07:08:35.311Z</updated>
    
    <content type="html"><![CDATA[<p><strong>BUG mysql分页数据偶尔有重复</strong></p><p>解决：在sql语句中使用了order by field，其中filed字段非id，数据有重复导致分页数据偶尔会重复，再增加order by id可以解决，参考<a href="https://stackoverflow.com/questions/43798247/laravel-pagination-showing-duplicate-and-replacing-random-row" target="_blank" rel="noopener">stackoverflow</a><br>以及 <a href="https://stackoverflow.com/questions/6662837/how-mysql-order-the-rows-with-same-values" target="_blank" rel="noopener">stackoverflow</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;BUG mysql分页数据偶尔有重复&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;解决：在sql语句中使用了order by field，其中filed字段非id，数据有重复导致分页数据偶尔会重复，再增加order by id可以解决，参考&lt;a href=&quot;https:
      
    
    </summary>
    
    
      <category term="mysql" scheme="https://zhouyanbo.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>php 502</title>
    <link href="https://zhouyanbo.com/2018/01/25/php-502-bad-gatewway/"/>
    <id>https://zhouyanbo.com/2018/01/25/php-502-bad-gatewway/</id>
    <published>2018-01-25T05:33:20.000Z</published>
    <updated>2020-09-09T07:25:49.154Z</updated>
    
    <content type="html"><![CDATA[<p><strong>记录一次bug查找经历</strong></p><h3 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h3><p>偶然间打开一个以前的项目，浏览器显示 502 Bad Gateway，最开始以为php-fpm没有启动，后来发现不是这个原因</p><h3 id="排查过程"><a href="#排查过程" class="headerlink" title="排查过程"></a>排查过程</h3><ol><li>nginx、php-fpm都服务正常</li><li>配置无误，访问root目录下的html文件都能正常访问，php文件都是502，定位到php-fpm出问题</li><li><p>查看nginx错误日志，报错信息(我电脑php-fpm监听的9011端口)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[error] 16914#16914: *1314340 recv() failed (104: Connection reset by peer) while reading response header from upstream, client: ****, server: ****, request: &quot;GET **** HTTP/1.1&quot;, upstream: &quot;fastcgi://127.0.0.1:9011&quot;, host: &quot;zhouyanbo.com&quot;</span><br></pre></td></tr></table></figure></li><li><p>检查php-fpm.log文件(一般位置在/var/log/php-fpm/error.log)，没有错误信息，修改/etc/php-fpm.d/<a href="http://www.conf配置" target="_blank" rel="noopener">www.conf配置</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">catch_workers_output = yes</span><br></pre></td></tr></table></figure></li><li><p>重新请求查看php-fpm.log日志，报错</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[pool www] child 31776 said into stderr: &quot;ERROR: Connection disallowed: IP address &apos;127.0.0.1&apos; has been dropped.&quot;</span><br></pre></td></tr></table></figure></li><li><p>最后修改/etc/php-fpm.d/<a href="http://www.conf配置，原来是any改为127.0.0.1" target="_blank" rel="noopener">www.conf配置，原来是any改为127.0.0.1</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">listen.allowed_clients = 127.0.0.1</span><br></pre></td></tr></table></figure></li><li><p>重启能正常访问</p></li></ol><h3 id="疑问"><a href="#疑问" class="headerlink" title="疑问"></a>疑问</h3><p>按道理说listen.allowed_clients = any也是能正常访问的，any包括了所有，但是莫名其妙会出现502的问题，暂时修改为127.0.0.1能正常访问了，以后有时间再研究下，先做下记录</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;记录一次bug查找经历&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;起因&quot;&gt;&lt;a href=&quot;#起因&quot; class=&quot;headerlink&quot; title=&quot;起因&quot;&gt;&lt;/a&gt;起因&lt;/h3&gt;&lt;p&gt;偶然间打开一个以前的项目，浏览器显示 502 Bad Gateway
      
    
    </summary>
    
    
      <category term="php" scheme="https://zhouyanbo.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>nginx 反向代理配置</title>
    <link href="https://zhouyanbo.com/2018/01/23/nginx-proxy-pass/"/>
    <id>https://zhouyanbo.com/2018/01/23/nginx-proxy-pass/</id>
    <published>2018-01-23T07:18:30.000Z</published>
    <updated>2020-09-09T07:25:42.719Z</updated>
    
    <content type="html"><![CDATA[<h3 id="条件"><a href="#条件" class="headerlink" title="条件"></a>条件</h3><p>两台能互相通讯的服务器，一台内网地址192.168.1.100，另外一台192.168.1.101，192.168.1.100服务器上设置反向代理，当用户访问地址时，转发到192.168.1.101服务器上</p><h3 id="服务器配置"><a href="#服务器配置" class="headerlink" title="服务器配置"></a>服务器配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line"></span><br><span class="line">    server_name www.zhouyanbo.com;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">       proxy_set_header X-Real-IP  $remote_addr;</span><br><span class="line">       proxy_set_header X-Forwarded-For $remote_addr;</span><br><span class="line">       proxy_set_header Host $host;</span><br><span class="line">       proxy_pass http://192.168.1.101:8080;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>192.168.1.101服务器上正常配置站点</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;条件&quot;&gt;&lt;a href=&quot;#条件&quot; class=&quot;headerlink&quot; title=&quot;条件&quot;&gt;&lt;/a&gt;条件&lt;/h3&gt;&lt;p&gt;两台能互相通讯的服务器，一台内网地址192.168.1.100，另外一台192.168.1.101，192.168.1.100服务器上设置反
      
    
    </summary>
    
    
      <category term="nginx" scheme="https://zhouyanbo.com/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>ngrok服务器搭建</title>
    <link href="https://zhouyanbo.com/2017/12/14/ngrok-install/"/>
    <id>https://zhouyanbo.com/2017/12/14/ngrok-install/</id>
    <published>2017-12-14T09:29:55.000Z</published>
    <updated>2020-09-09T07:25:41.841Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>记录ngrok的安装过程</p></blockquote><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><ol><li>一台linode服务器，系统 Centos 7 amd64</li><li>一个公网域名 zhouyanbo.com</li></ol><h4 id="一、安装软件"><a href="#一、安装软件" class="headerlink" title="一、安装软件"></a>一、安装软件</h4><h5 id="1-安装gcc"><a href="#1-安装gcc" class="headerlink" title="1. 安装gcc"></a>1. 安装gcc</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install gcc</span><br></pre></td></tr></table></figure><h5 id="2-安装go环境"><a href="#2-安装go环境" class="headerlink" title="2. 安装go环境"></a>2. 安装go环境</h5><p>下载最新的go版本<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://redirector.gvt1.com/edgedl/go/go1.9.2.linux-amd64.tar.gz</span><br></pre></td></tr></table></figure></p><p>解压<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -C /usr/<span class="built_in">local</span>/ -zxvf go1.9.2.linux-amd64.tar.gz</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>添加环境变量<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure></p><p>在文件中写入以下两行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export GOROOT=/usr/local/go</span><br><span class="line">export PATH=$PATH:$GOROOT/bin</span><br></pre></td></tr></table></figure></p><p>保存退出，执行下面命令使生效<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure></p><p>命令行中输入go version 输出版本号即为安装成功</p><h4 id="二、在服务器上搭建ngrok服务"><a href="#二、在服务器上搭建ngrok服务" class="headerlink" title="二、在服务器上搭建ngrok服务"></a>二、在服务器上搭建ngrok服务</h4><h5 id="1-下载ngrok源码"><a href="#1-下载ngrok源码" class="headerlink" title="1. 下载ngrok源码"></a>1. 下载ngrok源码</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/src</span><br><span class="line">git clone https://github.com/inconshreveable/ngrok.git</span><br></pre></td></tr></table></figure><h5 id="2-生成证书"><a href="#2-生成证书" class="headerlink" title="2. 生成证书"></a>2. 生成证书</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cd ngrok</span><br><span class="line"></span><br><span class="line">export NGROK_DOMAIN=&quot;zhouyanbo.com&quot;</span><br><span class="line"></span><br><span class="line">openssl genrsa -out rootCA.key 2048</span><br><span class="line">openssl req -x509 -new -nodes -key rootCA.key -subj &quot;/CN=$NGROK_DOMAIN&quot; -days 5000 -out rootCA.pem</span><br><span class="line">openssl genrsa -out device.key 2048</span><br><span class="line">openssl req -new -key device.key -subj &quot;/CN=$NGROK_DOMAIN&quot; -out device.csr</span><br><span class="line">openssl x509 -req -in device.csr -CA rootCA.pem -CAkey rootCA.key -CAcreateserial -out device.crt -days 5000</span><br></pre></td></tr></table></figure><p>替换原有证书</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cp rootCA.pem assets/client/tls/ngrokroot.crt</span><br><span class="line">cp device.crt assets/server/tls/snakeoil.crt</span><br><span class="line">cp device.key assets/server/tls/snakeoil.key</span><br></pre></td></tr></table></figure><h5 id="3-服务端编译生成ngrokd"><a href="#3-服务端编译生成ngrokd" class="headerlink" title="3. 服务端编译生成ngrokd"></a>3. 服务端编译生成ngrokd</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GOOS=linux GOARCH=amd64 make release-server</span><br></pre></td></tr></table></figure><p>编译成功后在当前目录的bin目录下可找到ngrokd文件</p><h5 id="4-编译生成ngrok客户端"><a href="#4-编译生成ngrok客户端" class="headerlink" title="4. 编译生成ngrok客户端"></a>4. 编译生成ngrok客户端</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GOOS=darwin GOARCH=amd64 make release-client</span><br></pre></td></tr></table></figure><p>完成后会在 /usr/local/src/ngrok/bin/darwin_amd64/ 下发现 ngrok 文件, 用rsync命令拷贝文件到Mac上</p><h5 id="5-mac上编写ngrok配置文件"><a href="#5-mac上编写ngrok配置文件" class="headerlink" title="5. mac上编写ngrok配置文件"></a>5. mac上编写ngrok配置文件</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">server_addr: &quot;zhouyanbo.com:8083&quot;</span><br><span class="line">trust_host_root_certs: false</span><br><span class="line">tunnels:</span><br><span class="line">  http:</span><br><span class="line">    subdomain: &quot;ngrok&quot;</span><br><span class="line">    proto:</span><br><span class="line">      http: &quot;8090&quot;</span><br><span class="line">      </span><br><span class="line">  https:</span><br><span class="line">    subdomain: &quot;ngrok&quot;</span><br><span class="line">    proto:</span><br><span class="line">      https: &quot;8091&quot;</span><br></pre></td></tr></table></figure><h5 id="6-服务端开启服务，客户端连接"><a href="#6-服务端开启服务，客户端连接" class="headerlink" title="6. 服务端开启服务，客户端连接"></a>6. 服务端开启服务，客户端连接</h5><p>服务端<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bin/ngrokd -tlsKey=&quot;assets/server/tls/snakeoil.key&quot; -tlsCrt=&quot;assets/server/tls/snakeoil.crt&quot; -domain=&quot;$NGROK_DOMAIN&quot;  -httpAddr=&quot;:80&quot; -httpsAddr=&quot;:8082&quot; -tunnelAddr=&quot;:8083&quot;</span><br></pre></td></tr></table></figure></p><p>客户端<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./ngrok -config ngrok.cfg start http https</span><br></pre></td></tr></table></figure></p><p>连接成功后会显示如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Tunnel Status                 online</span><br><span class="line">Version                       1.7/1.7</span><br><span class="line">Forwarding                    https://ngrok.zhouyanbo.com:8082 -&gt; 127.0.0.1:8091</span><br><span class="line">Forwarding                    http://ngrok.zhouyanbo.com -&gt; 127.0.0.1:8090</span><br><span class="line">Web Interface                 127.0.0.1:4040</span><br><span class="line"># Conn                        0</span><br><span class="line">Avg Conn Time                 0.00ms</span><br></pre></td></tr></table></figure><p>接下来在本地搭建项目，开启8090端口，就可以通过ngrok.zhouyanbo.com来访问了，以上步骤参考<a href="https://ubock.com/article/31-2#clist" target="_blank" rel="noopener">这里</a></p><h4 id="三、问题"><a href="#三、问题" class="headerlink" title="三、问题"></a>三、问题</h4><p>由于zhouyanbo.com放有我的个人bolg网站，使用80端口，搭建ngrok服务是为了微信公众号服务端在本地调试功能，只能使用80端口，两个办法解决</p><ol><li>再买个域名</li><li>调试微信公众号的时候关闭blog站点</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;记录ngrok的安装过程&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;一台linode服务器，系统 Centos 7 amd64&lt;/li&gt;
&lt;li&gt;一个公网域名 zhouyanbo.com&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;一、安装软件&quot;&gt;&lt;a href=&quot;#一、安装软件&quot; class=&quot;headerlink&quot; title=&quot;一、安装软件&quot;&gt;&lt;/a&gt;一、安装软件&lt;/h4&gt;&lt;h5 id=&quot;1-安装gcc&quot;&gt;&lt;a href=&quot;#1-安装gcc&quot; class=&quot;headerlink&quot; title=&quot;1. 安装gcc&quot;&gt;&lt;/a&gt;1. 安装gcc&lt;/h5&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yum install gcc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;2-安装go环境&quot;&gt;&lt;a href=&quot;#2-安装go环境&quot; class=&quot;headerlink&quot; title=&quot;2. 安装go环境&quot;&gt;&lt;/a&gt;2. 安装go环境&lt;/h5&gt;&lt;p&gt;下载最新的go版本&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wget https://redirector.gvt1.com/edgedl/go/go1.9.2.linux-amd64.tar.gz&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;解压&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;tar -C /usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/ -zxvf go1.9.2.linux-amd64.tar.gz&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="ngrok linux" scheme="https://zhouyanbo.com/tags/ngrok-linux/"/>
    
  </entry>
  
  <entry>
    <title>Qt creater</title>
    <link href="https://zhouyanbo.com/2017/11/10/qt-creater-error/"/>
    <id>https://zhouyanbo.com/2017/11/10/qt-creater-error/</id>
    <published>2017-11-10T07:15:33.000Z</published>
    <updated>2020-09-09T07:26:42.133Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Qt Creator 包括项目生成向导、高级的 C++ 代码编辑器、浏览文件及类的工具、集成了 Qt Designer、Qt Assistant、Qt Linguist、图形化的 GDB 调试前端，集成 qmake 构建工具等</p></blockquote><p>最近空闲时间在看python相关的资料，基础部分大致看了下，自己用python写了几个小程序，都是些文件、字符串的操作，接下来想用Python做一些小的桌面程序，就有了下面的一段故事</p><p>查阅一些资料最后决定使用pyqt5来做开发</p><h4 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h4><ol><li>系统 Mac OS X EI</li><li>Qt5.9.2 </li><li>Qt creater4.4.1</li></ol><p>初始想法是做一个计算器桌面程序，软件安装完毕之后，打开Qt creater配置qt version，构建套件就用默认的桌面就行，按照教程创建项目，最后进入主界面，<br>发现项目下只有一个demo.pro文件，打开demo.pro文件所在的文件夹，发现.ui、<br>.cpp、.h文件都没显示出来，也不能正常运行，小白第一次接触不知道啥原因，遂Google，各种方式搜索，大概找了大半天时间的资料，没有发现有相同问题的同学，未果，搁置</p><p>第二天到公司做完工作上的任务继续搜资料，偶然看到一句话</p><p><strong>编译器建议选择mac的clang编译器，使用苹果自带的编译器，程序运行会相对稳定些，避免平台带来的差异。</strong></p><p>于是去偏好设置中改了下编译器，改成了自带的clang编译器（原来用的gcc），保存，神奇了，项目文件都显示出来了，并且也能正常运行了，对于刚接触Qt的我来说还不知道为啥，等有时间深入了解下吧，目前只想用来布局一个界面</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Qt Creator 包括项目生成向导、高级的 C++ 代码编辑器、浏览文件及类的工具、集成了 Qt Designer、Qt Assistant、Qt Linguist、图形化的 GDB 调试前端，集成 qmake 构建工具等&lt;/p&gt;
&lt;/bloc
      
    
    </summary>
    
    
      <category term="python" scheme="https://zhouyanbo.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>处理TIF、EPS图片</title>
    <link href="https://zhouyanbo.com/2017/09/11/php-handle-tif-image/"/>
    <id>https://zhouyanbo.com/2017/09/11/php-handle-tif-image/</id>
    <published>2017-09-11T08:41:07.000Z</published>
    <updated>2020-09-09T07:26:19.341Z</updated>
    
    <content type="html"><![CDATA[<p>工作中需要处理图片，格式包括png、jpg、svg、gif、tif、eps，等等。。。 前面几种还知道<br>第一次听说还有tif、eps格式的图片，看来还是见识少啊</p><p>在网上找资料发现很少有处理这两种格式的图片的，尤其是eps，最后找到<a href="https://www.imagemagick.org" target="_blank" rel="noopener">imagemagick</a>，看了介绍之后觉得真是功能强大啊，无所不能</p><p>具体安装及使用方法见<a href="https://www.imagemagick.org/script/download.php" target="_blank" rel="noopener">官网</a></p><p>使用过程中发现用convert命令对tif图片处理时，会在目录下生成不止一个图片</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">convert -resize 200 image.tif target_path</span><br></pre></td></tr></table></figure><p>查资料发现tif是有图层的，一个tif图片可能会有多个layer，如果只要想生成一个图片的话，修改命令如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">convert -resize 200 image.tif[0] target_path</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;工作中需要处理图片，格式包括png、jpg、svg、gif、tif、eps，等等。。。 前面几种还知道&lt;br&gt;第一次听说还有tif、eps格式的图片，看来还是见识少啊&lt;/p&gt;
&lt;p&gt;在网上找资料发现很少有处理这两种格式的图片的，尤其是eps，最后找到&lt;a href=&quot;htt
      
    
    </summary>
    
    
      <category term="php" scheme="https://zhouyanbo.com/tags/php/"/>
    
  </entry>
  
</feed>
