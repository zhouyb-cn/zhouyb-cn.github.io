{"meta":{"title":"美好的一天","subtitle":null,"description":null,"author":"zhouyb90","url":"https://zhouyanbo.com"},"pages":[{"title":"About","date":"2020-09-08T07:08:35.312Z","updated":"2020-09-08T07:08:35.312Z","comments":true,"path":"about/index.html","permalink":"https://zhouyanbo.com/about/index.html","excerpt":"","text":""},{"title":"Categories","date":"2020-09-08T07:08:35.313Z","updated":"2020-09-08T07:08:35.313Z","comments":true,"path":"categories/index.html","permalink":"https://zhouyanbo.com/categories/index.html","excerpt":"","text":""},{"title":"Tags","date":"2020-09-08T07:08:35.313Z","updated":"2020-09-08T07:08:35.313Z","comments":true,"path":"tags/index.html","permalink":"https://zhouyanbo.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"惊喜的一天","slug":"one-happy-day","date":"2020-10-27T05:57:18.000Z","updated":"2020-10-27T10:16:17.713Z","comments":true,"path":"2020/10/27/one-happy-day/","link":"","permalink":"https://zhouyanbo.com/2020/10/27/one-happy-day/","excerpt":"","text":"2020年10月26日，星期一，本是平凡的一天，枯燥的周一，没想到晚上来了点惊喜，十四五年没见的同学突然联系上了。 初中在离家挺远的安国上学，认识了好多朋友，但是初中毕业以后就回家上学了，好多人慢慢失去了联系，晚上几个常在安国本地的同学聚在一起，想起了我，其中一人留有我的联系方式，还是上大学加上的，给我开了视频，让我一个一个说名字，说实话，好多年了，名字突然叫不上来，但是看着面容都能认出来，还有原来的影子，最大的特点就是全部变胖了。 有太多的话题，激动的说不出话来，有点想哭的感觉，当时大家在一起玩的很好，关系都不错，只是没有联系了，再联系还是感觉很亲切，大家都喝多了，跟他们视频完脑海中一直浮现十四五年前的画面。 初中离家远，老师同学都很照顾我，很感激！ 最后约定找时间一定见面好好叙叙旧，太想念大家了，初中的友谊真的深，大部分关系都很好，越往后年龄越大，交心的朋友越来越少了，尤其工作以后，在北京这个快节奏的城市中，大家忙忙碌碌，没有了生活，这一瞬间让人忘记了生活的烦恼，全是对过去美好的回忆，真的很好，无法入眠的一夜。","categories":[],"tags":[{"name":"生活","slug":"生活","permalink":"https://zhouyanbo.com/tags/生活/"}],"keywords":[]},{"title":"leetcode -- 前缀树","slug":"trie-prefix-tree","date":"2020-09-23T09:59:25.000Z","updated":"2020-09-23T10:12:07.613Z","comments":true,"path":"2020/09/23/trie-prefix-tree/","link":"","permalink":"https://zhouyanbo.com/2020/09/23/trie-prefix-tree/","excerpt":"","text":"leetcode上的一道设计题，要求实现trie这种数据结构，包含插入、查找、前缀查找的操作https://leetcode-cn.com/problems/implement-trie-prefix-tree/ 首先定义Trie struct 12345type Trie struct &#123; children []*Trie isWord bool //是否为单词 part byte&#125; children 保存的是当前节点的所有子节点 isWord 如果当前节点为单词结束，标记为true part 记录当前节点的字符，为byte类型 Insert 插入操作遍历要插入的单词word，判断每一个字符是否出现在children中，如果出现了，继续往下遍历，没有出现，则新建一个节点，并且放入当前节点的children中 结束条件则为遍历的层数跟给定的单词长度一致，并且标记当前节点的isWord属性为true，代表这是一个单词 Search 查询操作同样是遍历所有的children，如果包含当前字符，则继续向下遍历，不包含则结束遍历，返回找不到，当遍历到单词长度的深度的时候，需要判断当前节点的isWord属性是否为true，只有为true的时候才是一个单词，否则返回找不到 StartsWith 判断以给定的prefix开头同search操作相同，只是遍历到最后不需要判断当前节点的isWord属性 完整代码如下： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091type Trie struct &#123; children []*Trie isWord bool //是否为单词 part byte&#125;/** Initialize your data structure here. */func Constructor() Trie &#123; return Trie&#123;&#125;&#125;/** Inserts a word into the trie. */func (this *Trie) Insert(word string) &#123; this.insert(word, 0)&#125;func (this *Trie) insert(word string, height int) &#123; if len(word) == height &#123; this.isWord = true return &#125; // 取一个字母查找 w := word[height] child := this.matchChild(w) // 不存在新建一个节点加入 if child == nil &#123; child = &amp;Trie&#123;part: w&#125; this.children = append(this.children, child) &#125; // 继续遍历下一级 child.insert(word, height + 1)&#125;func (this *Trie) matchChild(w byte) *Trie &#123; for _, child := range this.children &#123; if child.part == w &#123; return child &#125; &#125; return nil&#125;/** Returns if the word is in the trie. */func (this *Trie) Search(word string) bool &#123; return this.search(word, 0)&#125;func (this *Trie) search(word string, height int) bool &#123; if len(word) == height &#123; if this.isWord &#123; return true &#125; return false &#125; for _, child := range this.children &#123; if child.part == word[height] &#123; return child.search(word, height + 1) &#125; &#125; return false&#125;/** Returns if there is any word in the trie that starts with the given prefix. */func (this *Trie) StartsWith(prefix string) bool &#123; return this.searchStartsWith(prefix, 0)&#125;func (this *Trie) searchStartsWith(word string, height int) bool &#123; if len(word) == height &#123; return true &#125; for _, child := range this.children &#123; if child.part == word[height] &#123; return child.searchStartsWith(word, height + 1) &#125; &#125; return false&#125;/** * Your Trie object will be instantiated and called as such: * obj := Constructor(); * obj.Insert(word); * param_2 := obj.Search(word); * param_3 := obj.StartsWith(prefix); */","categories":[],"tags":[{"name":"algorithm","slug":"algorithm","permalink":"https://zhouyanbo.com/tags/algorithm/"}],"keywords":[]},{"title":"下半年的一些计划","slug":"next-half-year-plan","date":"2019-07-15T06:07:48.000Z","updated":"2020-10-27T06:12:18.469Z","comments":true,"path":"2019/07/15/next-half-year-plan/","link":"","permalink":"https://zhouyanbo.com/2019/07/15/next-half-year-plan/","excerpt":"","text":"越来越觉得自己进步很慢了，几乎停止不前了，大城市的焦虑、生活的琐碎搞的整个人都比较消沉，需要找点事情做，找个感兴趣的事情。 准备看看数据结构、算法，虽说工作中用不到，但是觉得挺有用的，能理解很多东西，觉得挺有意思，而且现在有很多刷题的网站，能够做出来也会有些喜悦。 接下来就坚持学习算法，每日做题了，充实！","categories":[],"tags":[{"name":"生活","slug":"生活","permalink":"https://zhouyanbo.com/tags/生活/"}],"keywords":[]},{"title":"近况","slug":"mid-year-thoughts","date":"2019-06-20T06:04:47.000Z","updated":"2020-10-27T10:56:31.796Z","comments":true,"path":"2019/06/20/mid-year-thoughts/","link":"","permalink":"https://zhouyanbo.com/2019/06/20/mid-year-thoughts/","excerpt":"","text":"转眼19年过去了一半了，回想这半年好像也没做啥，时间过的就是这么快。 想想自己都要三十了，不敢想啊，可怕。 毕业也5年过去了，有时候总是会回想自己工作的这几年，开始进步还挺大，后来越来越小，有考虑自身的原因，也想过所在环境的问题，都有吧，主要还在于自己，对自己有些认知。 年龄越大，琐事越来越多，自己不够自信，可能从小没有培养出来，我哥一直安慰我，哈哈哈。 接下来继续努力，有进步就可以，平平淡淡。","categories":[],"tags":[{"name":"生活","slug":"生活","permalink":"https://zhouyanbo.com/tags/生活/"}],"keywords":[]},{"title":"有趣的乘法","slug":"recursive-mulitply","date":"2019-01-08T03:14:35.000Z","updated":"2020-09-09T07:25:20.891Z","comments":true,"path":"2019/01/08/recursive-mulitply/","link":"","permalink":"https://zhouyanbo.com/2019/01/08/recursive-mulitply/","excerpt":"","text":"leetcode算法思路 leetcode地址：递归乘法 该题让用递归的方法求乘法的结果，要求不要用 * 运算符，可以使用加、减、位移 题目比较简单，把乘法换成加法去做 解法1: 123456789101112class Solution &#123; public int multiply(int A, int B) &#123; // A * B = (A&lt;&lt;1)(b&gt;&gt;1) + A(B%2) if (B == 0) &#123; return 0; &#125; if (B == 1) &#123; return A; &#125; return multiply(A, B-1) + A; &#125;&#125; 在题解中看到一种换算成位运算的操作A * B = (A&lt;&lt;1)(b&gt;&gt;1) + A(B%2)，结果内存消耗稍稍少了一点 解法2: 12345678910111213141516class Solution &#123; public int multiply(int A, int B) &#123; // A * B = (A&lt;&lt;1)(b&gt;&gt;1) + A(B%2) if (B == 0) &#123; return 0; &#125; if (B == 1) &#123; return A; &#125; if (B % 2 == 1) &#123; return multiply(A&lt;&lt;1, B&gt;&gt;1) + A; &#125; else &#123; return multiply(A&lt;&lt;1, B&gt;&gt;1); &#125; &#125;&#125;","categories":[],"tags":[{"name":"algorithm","slug":"algorithm","permalink":"https://zhouyanbo.com/tags/algorithm/"}],"keywords":[]},{"title":"2018 年终总结","slug":"2018-summary","date":"2018-12-10T08:28:37.000Z","updated":"2020-09-09T07:25:19.007Z","comments":true,"path":"2018/12/10/2018-summary/","link":"","permalink":"https://zhouyanbo.com/2018/12/10/2018-summary/","excerpt":"","text":"2018就要结束了，总会想起2010年上大学的情景，当时年末还在想明年就是2011年，这个念起来好拗口，一眨眼2018年都要结束了，回顾这一年。。。 加油吧！！！","categories":[],"tags":[{"name":"other","slug":"other","permalink":"https://zhouyanbo.com/tags/other/"}],"keywords":[]},{"title":"程序员的自动化","slug":"programmer-automation","date":"2018-11-20T08:35:11.000Z","updated":"2020-09-09T07:26:26.401Z","comments":true,"path":"2018/11/20/programmer-automation/","link":"","permalink":"https://zhouyanbo.com/2018/11/20/programmer-automation/","excerpt":"","text":"18年是个多病的年，妈妈从年初腿部肿，找了好多医院医生现在吃药也没根治。随着现在电子设备的普及，电脑、手机重度使用者，导致现在眼睛疾病越来越多。先是室友眼睛有问题，寻医问药很多地方，最后拖的时间长了，做了手术恢复中，恢复的挺不错，又是我女朋友突然一天说眼睛不舒服，感觉磨的厉害睁不开眼，赶紧带去医院，最后诊断为干眼症，好在及时发现，医生开了些药需要慢慢调理，是个长期的病，以后用眼都要注意休息了。 经过这次事情之后，毕竟班还是要上的，医生也不建议丢了工作，平时工作就需要多多注意了，但是毕竟天天面对电脑也很无奈，女朋友在一家知识产权公司做文职工作，在我看来没什么技术含量也没啥提升的空间，尽早离开为好，放在年后考虑了，只是目前有一份每天都要整理邮件的工作，最初几天我去公司帮忙弄了下，去了一次我眼睛都要瞎了，windows电脑，屏幕小，分辨率低，实在是受不了，更别说她现在眼睛还不好，于是到家想了下写个程序能提高一些效率，于是便有了下文的产出。 首先邮件是outlook导出的.msg后缀的文件，本人电脑Mac Pro无奈打不开这种格式，还花钱买了MailReader软件，后来发现没有必要，分析了下需求准备用python写一个简单的处理脚本，本人平时也不接触python，写的比较垃圾，大家不要在意细节。 主要记录一下使用的关键package，其它的都是一些细节的需求，没有什么难度，无非是一些字符串的处理，循环，文件处理，最大的问题就是没有办法读取到邮件的主题，千辛万苦最后找到了一个包 extract_msg 需要的依赖也比较多，一一安装好就可以，主要用到了它的 123msg = extract_msg.Message(\"path/to/msg/file.msg\", attachmentClass = CustomAttachmentClass)# get mail subjectsubject = msg.subject 其中是用了python的一个web框架 Django 初次使用，没有深入研究，另外前端页面没有写，本来打算找个前端UI框架的，最后放弃了，没有耽误功夫在前端上，主要实现了功能，后期有时间再补上。 代码上传到了 Github 接下来需要有时间待完成的： 自动识别邮件主题中的卷号 做一个漂亮的前端界面 后续优化","categories":[],"tags":[{"name":"geek","slug":"geek","permalink":"https://zhouyanbo.com/tags/geek/"}],"keywords":[]},{"title":"生命不息，折腾不止","slug":"geek-funny-thing","date":"2018-10-10T08:37:56.000Z","updated":"2020-09-08T07:08:35.310Z","comments":true,"path":"2018/10/10/geek-funny-thing/","link":"","permalink":"https://zhouyanbo.com/2018/10/10/geek-funny-thing/","excerpt":"","text":"最近老大提起了一个说很好玩的聊天客户端weechat，说是很Geek，让我研究下给大家做一下分享，下面记录一下过程。 网上搜索了如何能够在weechat中收发微信消息，最初有点一头雾水，无从下手，只是知道weecaht是一个IRC客户端，官方首页的说明 WeeChat, the extensible chat client. Fast — Light — Free software 轻量级的开源的软件，听说很多大佬在用（大佬都是在用一些看起来很高大上的东西） 按照官方文档一步一步来就可以，文档写的很清晰，只是需要花点时间理解weechat是做什么的就可以了，实际上比较简单，weecaht只是一个IRC客户端，IRC客户端也有很多，可以选择其它的客户端，weechat可扩展性比较大，装好weechat之后，又在github上找了一个控制网页微信来收发微信的库，在这里https://github.com/MaskRay/wechatircd，按照Readme操作就可以，最后创建一个wechat server 1/connect wechat 即可加载到网页微信端的所有消息，并且可以是现在terminal中收发消息，看起来很高大上，并且可以随时查看以前的消息，都有日志记录，不方便的是对图片、音频、文件收发不太方便，显示到Terminal都是链接形式， 效果如下： 2018.12.28 补充： 升级了电脑系统到10.14.2，发现无法显示中文字符，输入中文也无法显示了，都变成了\u0010？ 查了资料应该是编码问题，最后升级了iTerm2到最新版本发现解决了。","categories":[],"tags":[{"name":"geek","slug":"geek","permalink":"https://zhouyanbo.com/tags/geek/"}],"keywords":[]},{"title":"创意","slug":"some-original-ideas","date":"2018-09-10T08:40:07.000Z","updated":"2020-09-09T07:27:02.205Z","comments":true,"path":"2018/09/10/some-original-ideas/","link":"","permalink":"https://zhouyanbo.com/2018/09/10/some-original-ideas/","excerpt":"","text":"想一些有创意的ideas","categories":[],"tags":[{"name":"other","slug":"other","permalink":"https://zhouyanbo.com/tags/other/"}],"keywords":[]},{"title":"使用libreoffice转换文档成pdf","slug":"libreoffice","date":"2018-07-18T09:03:07.000Z","updated":"2020-09-09T07:25:11.801Z","comments":true,"path":"2018/07/18/libreoffice/","link":"","permalink":"https://zhouyanbo.com/2018/07/18/libreoffice/","excerpt":"","text":"需求将doc、docx、xls、xlsx、ppt、pptx格式的转换成pdf文档 实施系统是centos 7，这里使用libreoffice，在转换过程中发现，只要是文件中包含中文字符，转换之后文件中成了乱码，不可读 解决由于centos 7系统中缺少对中文的支持，需要安装中文字库，参考这里centos安装中文字库，安装完成后重启libreoffice即可 附：转换脚本","categories":[],"tags":[{"name":"linux","slug":"linux","permalink":"https://zhouyanbo.com/tags/linux/"}],"keywords":[]},{"title":"Dropbox 同步问题","slug":"dropbox-synchronization","date":"2018-05-20T07:26:12.000Z","updated":"2020-09-09T07:25:16.300Z","comments":true,"path":"2018/05/20/dropbox-synchronization/","link":"","permalink":"https://zhouyanbo.com/2018/05/20/dropbox-synchronization/","excerpt":"","text":"最初的时候下载了 Dropbox 做为我重要资料的网盘备份，可是最大的问题就是Dropbox的联网问题，众所周知此工具是被限制的，只能想一些办法FQ才可以使用，后来无奈从电脑上删除了，最近几天在整理1password备份的时候，觉得icloud有点问题（原先使用icloud做备份），而且今年icloud中国由云上贵州运营了，也曝出了一些不好的新闻，不知真假，虽然我也在用icloud的免费5G的空间，反正也没有放什么隐私的材料照片，也就无所谓了，密码这个东西还是需要注意些，比较了一下Dropbox相对安全一些，决定重新捡起Dropbox。 此站点我是用的Linode，每个月$5对我来说足够了（没什么浏览量），我在上面部署了ss服务，本地Mac安装ss客户端，添加服务器，选择自动代理模式，由于服务器在日本，延迟200多ms还算可以，基本的Google查询还是可以接受的。 下载Dropbox，安装在本地，安装好之后发现即使开启了ss还是一直处在连接中的状态，无法连接到服务器，于是在网上找到了方法，首先找到ss的自动模式的PAC文件 gfwlist.js，打来看到其中有一行 1var proxy = \"SOCKS5 127.0.0.1:1080; SOCKS 127.0.0.1:1080; DIRECT;\"; 根据每个人的不同配置跟我的不一样，仅供参考，接着打开Dropbox的偏好设置，找到网络 –&gt; 代理服务器，点击更改设置，选择手动，代理服务器类型：SOCKET5，服务器端口号写上就可以了，点击更新，过几秒发现Dropbox可以连接了 1password在偏好设置中选择同步方式为Dropbox，我只是在Mac跟iphone之间同步，iphone上开启代理即可，经试验，同步还是很快的，可以开心的使用了。","categories":[],"tags":[{"name":"dropbox","slug":"dropbox","permalink":"https://zhouyanbo.com/tags/dropbox/"}],"keywords":[]},{"title":"image storage server","slug":"image-storage-server","date":"2018-04-10T08:44:10.000Z","updated":"2020-09-09T07:25:13.131Z","comments":true,"path":"2018/04/10/image-storage-server/","link":"","permalink":"https://zhouyanbo.com/2018/04/10/image-storage-server/","excerpt":"","text":"最近发现个人博客网站很少用到图，存储到一些云服务厂商不知道哪天就给封了，还是放在自己服务器比较安全，决定找时间在现有的图片站点加上图片上传功能。 Todo 图片上传服务 考虑服务器安全备份问题","categories":[],"tags":[{"name":"php","slug":"php","permalink":"https://zhouyanbo.com/tags/php/"}],"keywords":[]},{"title":"基本排序算法","slug":"sorting-algorithm","date":"2018-02-26T03:30:42.000Z","updated":"2020-09-08T07:08:35.312Z","comments":true,"path":"2018/02/26/sorting-algorithm/","link":"","permalink":"https://zhouyanbo.com/2018/02/26/sorting-algorithm/","excerpt":"","text":"一、冒泡排序冒泡排序（Bubble Sort），是一种计算机科学领域的较简单的排序算法。它重复地走访过要排序的数列，一次比较两个元素，如果他们的顺序错误就把他们交换过来。走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。这个算法的名字由来是因为越大的元素会经由交换慢慢“浮”到数列的顶端，故名 算法原理 比较相邻的元素。如果第一个比第二个大，就交换他们两个。 对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对。在这一点，最后的元素应该会是最大的数。 针对所有的元素重复以上的步骤，除了最后一个。 持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。 1234567def bubble_sort(list): length = len(list) for i in range(length): for j in range(1, length-i): if list[j-1] &gt; list[j]: list[j-1], list[j] = list[j], list[j-1] return list 二、冒泡排序冒泡排序（Bubble Sort），是一种计算机科学领域的较简单的排序算法。它重复地走访过要排序的数列，一次比较两个元素，如果他们的顺序错误就把他们交换过来。走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。这个算法的名字由来是因为越大的元素会经由交换慢慢“浮”到数列的顶端，故名 算法原理 比较相邻的元素。如果第一个比第二个大，就交换他们两个。 对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对。在这一点，最后的元素应该会是最大的数。 针对所有的元素重复以上的步骤，除了最后一个。 持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。 1234567def bubble_sort(list): length = len(list) for i in range(length): for j in range(1, length-i): if list[j-1] &gt; list[j]: list[j-1], list[j] = list[j], list[j-1] return list","categories":[],"tags":[{"name":"algorithm","slug":"algorithm","permalink":"https://zhouyanbo.com/tags/algorithm/"}],"keywords":[]},{"title":"升级站点php版本到7.2.1","slug":"upgrade-php-to-7","date":"2018-02-01T07:30:49.000Z","updated":"2020-09-09T07:27:17.009Z","comments":true,"path":"2018/02/01/upgrade-php-to-7/","link":"","permalink":"https://zhouyanbo.com/2018/02/01/upgrade-php-to-7/","excerpt":"php7已经问世两年多了，都说性能提升了不少，可开发一直在使用php5.6，最近考虑把自己站点的php版本升级一下，目前站点的php版本是5.6.31 12345~$ php -vPHP 5.6.31 (cli) (built: Sep 14 2017 18:12:46)Copyright (c) 1997-2016 The PHP GroupZend Engine v2.6.0, Copyright (c) 1998-2016 Zend Technologies with Zend OPcache v7.0.6-dev, Copyright (c) 1999-2016, by Zend Technologies php download目前官网的稳定版本是7.2.1，下面记录下升级过程","text":"php7已经问世两年多了，都说性能提升了不少，可开发一直在使用php5.6，最近考虑把自己站点的php版本升级一下，目前站点的php版本是5.6.31 12345~$ php -vPHP 5.6.31 (cli) (built: Sep 14 2017 18:12:46)Copyright (c) 1997-2016 The PHP GroupZend Engine v2.6.0, Copyright (c) 1998-2016 Zend Technologies with Zend OPcache v7.0.6-dev, Copyright (c) 1999-2016, by Zend Technologies php download目前官网的稳定版本是7.2.1，下面记录下升级过程 目前版本5.6.31是通过yum安装的，php7我想通过源码安装 首先先在本地下载源码包，通过rsync命令上传到服务器某个目录 按照官方文档的安装步骤php install解压 1tar zxf php-x.x.x 配置并构建，参考了这里 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748cd ../php-x.x.x./configure \\--prefix=/usr/local/php7 \\--with-fpm-user=nginx \\--with-fpm-group=nginx \\--with-bz2 \\--with-curl \\--with-gd \\--with-openssl \\--with-mhash \\--with-jpeg-dir \\--with-png-dir \\--with-freetype-dir \\--with-iconv-dir=/usr/local/libiconv \\--with-gettext \\--with-libxml-dir \\--with-zlib \\--with-xmlrpc \\--with-pcre-regex \\--with-pear \\--with-pdo-mysql=mysqlnd \\--with-mysqli=mysqlnd \\--with-libdir=lib64 \\--enable-dom \\--enable-xml \\--enable-fpm \\--enable-bcmath \\--enable-ftp \\--enable-sockets \\--disable-ipv6 \\--enable-mbregex \\--enable-mbstring \\--enable-calendar \\--enable-static \\--enable-fpm \\--enable-bcmath \\--enable-libxml \\--enable-inline-optimization \\--enable-mbregex \\--enable-opcache \\--enable-pcntl \\--enable-shmop \\--enable-soap \\--enable-sockets \\--enable-sysvsem \\--enable-zip \\make &amp; make install 创建配置文件 1234567891011121314cp php.ini-development /usr/local/php7/php.inicp /usr/local/php7/etc/php-fpm.conf.default /usr/local/php7/etc/php-fpm.confcp /usr/local/php7/etc/php-fpm.d/www.conf.default /usr/local/php7/etc/php-fpm.d/www.conf// 方法1cp -R sapi/fpm/init.d.php-fpm /etc/init.d/php-fpm// 如果没有权限启动cd /etc/init.d/php-fpmchmod 755 php-fpm//启动停止/etc/init.d/php-fpm start|stop// 方法2cp php-7.2.1/sapi/fpm/php-fpm /usr/local/bin///启动停止php-fpm | pkill php-fpm 查看 1234~$ php -vPHP 7.2.1 (fpm-fcgi) (built: Jan 30 2018 17:06:46)Copyright (c) 1997-2017 The PHP GroupZend Engine v3.2.0, Copyright (c) 1998-2017 Zend Technologies","categories":[],"tags":[{"name":"php","slug":"php","permalink":"https://zhouyanbo.com/tags/php/"}],"keywords":[]},{"title":"mysql 分页数据重复","slug":"mysql-data-duplicate","date":"2018-02-01T07:17:34.000Z","updated":"2020-09-08T07:08:35.311Z","comments":true,"path":"2018/02/01/mysql-data-duplicate/","link":"","permalink":"https://zhouyanbo.com/2018/02/01/mysql-data-duplicate/","excerpt":"","text":"BUG mysql分页数据偶尔有重复 解决：在sql语句中使用了order by field，其中filed字段非id，数据有重复导致分页数据偶尔会重复，再增加order by id可以解决，参考stackoverflow以及 stackoverflow","categories":[],"tags":[{"name":"mysql","slug":"mysql","permalink":"https://zhouyanbo.com/tags/mysql/"}],"keywords":[]},{"title":"php 502","slug":"php-502-bad-gatewway","date":"2018-01-25T05:33:20.000Z","updated":"2020-09-09T07:25:49.154Z","comments":true,"path":"2018/01/25/php-502-bad-gatewway/","link":"","permalink":"https://zhouyanbo.com/2018/01/25/php-502-bad-gatewway/","excerpt":"","text":"记录一次bug查找经历 起因偶然间打开一个以前的项目，浏览器显示 502 Bad Gateway，最开始以为php-fpm没有启动，后来发现不是这个原因 排查过程 nginx、php-fpm都服务正常 配置无误，访问root目录下的html文件都能正常访问，php文件都是502，定位到php-fpm出问题 查看nginx错误日志，报错信息(我电脑php-fpm监听的9011端口) 1[error] 16914#16914: *1314340 recv() failed (104: Connection reset by peer) while reading response header from upstream, client: ****, server: ****, request: &quot;GET **** HTTP/1.1&quot;, upstream: &quot;fastcgi://127.0.0.1:9011&quot;, host: &quot;zhouyanbo.com&quot; 检查php-fpm.log文件(一般位置在/var/log/php-fpm/error.log)，没有错误信息，修改/etc/php-fpm.d/www.conf配置 1catch_workers_output = yes 重新请求查看php-fpm.log日志，报错 1[pool www] child 31776 said into stderr: &quot;ERROR: Connection disallowed: IP address &apos;127.0.0.1&apos; has been dropped.&quot; 最后修改/etc/php-fpm.d/www.conf配置，原来是any改为127.0.0.1 1listen.allowed_clients = 127.0.0.1 重启能正常访问 疑问按道理说listen.allowed_clients = any也是能正常访问的，any包括了所有，但是莫名其妙会出现502的问题，暂时修改为127.0.0.1能正常访问了，以后有时间再研究下，先做下记录","categories":[],"tags":[{"name":"php","slug":"php","permalink":"https://zhouyanbo.com/tags/php/"}],"keywords":[]},{"title":"nginx 反向代理配置","slug":"nginx-proxy-pass","date":"2018-01-23T07:18:30.000Z","updated":"2020-09-09T07:25:42.719Z","comments":true,"path":"2018/01/23/nginx-proxy-pass/","link":"","permalink":"https://zhouyanbo.com/2018/01/23/nginx-proxy-pass/","excerpt":"","text":"条件两台能互相通讯的服务器，一台内网地址192.168.1.100，另外一台192.168.1.101，192.168.1.100服务器上设置反向代理，当用户访问地址时，转发到192.168.1.101服务器上 服务器配置123456789101112server &#123; listen 80; server_name www.zhouyanbo.com; location / &#123; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $remote_addr; proxy_set_header Host $host; proxy_pass http://192.168.1.101:8080; &#125;&#125; 192.168.1.101服务器上正常配置站点","categories":[],"tags":[{"name":"nginx","slug":"nginx","permalink":"https://zhouyanbo.com/tags/nginx/"}],"keywords":[]},{"title":"ngrok服务器搭建","slug":"ngrok-install","date":"2017-12-14T09:29:55.000Z","updated":"2020-09-09T07:25:41.841Z","comments":true,"path":"2017/12/14/ngrok-install/","link":"","permalink":"https://zhouyanbo.com/2017/12/14/ngrok-install/","excerpt":"记录ngrok的安装过程 准备 一台linode服务器，系统 Centos 7 amd64 一个公网域名 zhouyanbo.com 一、安装软件1. 安装gcc1yum install gcc 2. 安装go环境下载最新的go版本1wget https://redirector.gvt1.com/edgedl/go/go1.9.2.linux-amd64.tar.gz 解压1tar -C /usr/local/ -zxvf go1.9.2.linux-amd64.tar.gz","text":"记录ngrok的安装过程 准备 一台linode服务器，系统 Centos 7 amd64 一个公网域名 zhouyanbo.com 一、安装软件1. 安装gcc1yum install gcc 2. 安装go环境下载最新的go版本1wget https://redirector.gvt1.com/edgedl/go/go1.9.2.linux-amd64.tar.gz 解压1tar -C /usr/local/ -zxvf go1.9.2.linux-amd64.tar.gz 添加环境变量1vim /etc/profile 在文件中写入以下两行12export GOROOT=/usr/local/goexport PATH=$PATH:$GOROOT/bin 保存退出，执行下面命令使生效1source /etc/profile 命令行中输入go version 输出版本号即为安装成功 二、在服务器上搭建ngrok服务1. 下载ngrok源码12cd /usr/local/srcgit clone https://github.com/inconshreveable/ngrok.git 2. 生成证书123456789cd ngrokexport NGROK_DOMAIN=&quot;zhouyanbo.com&quot;openssl genrsa -out rootCA.key 2048openssl req -x509 -new -nodes -key rootCA.key -subj &quot;/CN=$NGROK_DOMAIN&quot; -days 5000 -out rootCA.pemopenssl genrsa -out device.key 2048openssl req -new -key device.key -subj &quot;/CN=$NGROK_DOMAIN&quot; -out device.csropenssl x509 -req -in device.csr -CA rootCA.pem -CAkey rootCA.key -CAcreateserial -out device.crt -days 5000 替换原有证书 123cp rootCA.pem assets/client/tls/ngrokroot.crtcp device.crt assets/server/tls/snakeoil.crtcp device.key assets/server/tls/snakeoil.key 3. 服务端编译生成ngrokd1GOOS=linux GOARCH=amd64 make release-server 编译成功后在当前目录的bin目录下可找到ngrokd文件 4. 编译生成ngrok客户端1GOOS=darwin GOARCH=amd64 make release-client 完成后会在 /usr/local/src/ngrok/bin/darwin_amd64/ 下发现 ngrok 文件, 用rsync命令拷贝文件到Mac上 5. mac上编写ngrok配置文件123456789101112server_addr: &quot;zhouyanbo.com:8083&quot;trust_host_root_certs: falsetunnels: http: subdomain: &quot;ngrok&quot; proto: http: &quot;8090&quot; https: subdomain: &quot;ngrok&quot; proto: https: &quot;8091&quot; 6. 服务端开启服务，客户端连接服务端1./bin/ngrokd -tlsKey=&quot;assets/server/tls/snakeoil.key&quot; -tlsCrt=&quot;assets/server/tls/snakeoil.crt&quot; -domain=&quot;$NGROK_DOMAIN&quot; -httpAddr=&quot;:80&quot; -httpsAddr=&quot;:8082&quot; -tunnelAddr=&quot;:8083&quot; 客户端1./ngrok -config ngrok.cfg start http https 连接成功后会显示如下 1234567Tunnel Status onlineVersion 1.7/1.7Forwarding https://ngrok.zhouyanbo.com:8082 -&gt; 127.0.0.1:8091Forwarding http://ngrok.zhouyanbo.com -&gt; 127.0.0.1:8090Web Interface 127.0.0.1:4040# Conn 0Avg Conn Time 0.00ms 接下来在本地搭建项目，开启8090端口，就可以通过ngrok.zhouyanbo.com来访问了，以上步骤参考这里 三、问题由于zhouyanbo.com放有我的个人bolg网站，使用80端口，搭建ngrok服务是为了微信公众号服务端在本地调试功能，只能使用80端口，两个办法解决 再买个域名 调试微信公众号的时候关闭blog站点","categories":[],"tags":[{"name":"ngrok linux","slug":"ngrok-linux","permalink":"https://zhouyanbo.com/tags/ngrok-linux/"}],"keywords":[]},{"title":"Qt creater","slug":"qt-creater-error","date":"2017-11-10T07:15:33.000Z","updated":"2020-09-09T07:26:42.133Z","comments":true,"path":"2017/11/10/qt-creater-error/","link":"","permalink":"https://zhouyanbo.com/2017/11/10/qt-creater-error/","excerpt":"","text":"Qt Creator 包括项目生成向导、高级的 C++ 代码编辑器、浏览文件及类的工具、集成了 Qt Designer、Qt Assistant、Qt Linguist、图形化的 GDB 调试前端，集成 qmake 构建工具等 最近空闲时间在看python相关的资料，基础部分大致看了下，自己用python写了几个小程序，都是些文件、字符串的操作，接下来想用Python做一些小的桌面程序，就有了下面的一段故事 查阅一些资料最后决定使用pyqt5来做开发 开发环境 系统 Mac OS X EI Qt5.9.2 Qt creater4.4.1 初始想法是做一个计算器桌面程序，软件安装完毕之后，打开Qt creater配置qt version，构建套件就用默认的桌面就行，按照教程创建项目，最后进入主界面，发现项目下只有一个demo.pro文件，打开demo.pro文件所在的文件夹，发现.ui、.cpp、.h文件都没显示出来，也不能正常运行，小白第一次接触不知道啥原因，遂Google，各种方式搜索，大概找了大半天时间的资料，没有发现有相同问题的同学，未果，搁置 第二天到公司做完工作上的任务继续搜资料，偶然看到一句话 编译器建议选择mac的clang编译器，使用苹果自带的编译器，程序运行会相对稳定些，避免平台带来的差异。 于是去偏好设置中改了下编译器，改成了自带的clang编译器（原来用的gcc），保存，神奇了，项目文件都显示出来了，并且也能正常运行了，对于刚接触Qt的我来说还不知道为啥，等有时间深入了解下吧，目前只想用来布局一个界面","categories":[],"tags":[{"name":"python","slug":"python","permalink":"https://zhouyanbo.com/tags/python/"}],"keywords":[]},{"title":"处理TIF、EPS图片","slug":"php-handle-tif-image","date":"2017-09-11T08:41:07.000Z","updated":"2020-09-09T07:26:19.341Z","comments":true,"path":"2017/09/11/php-handle-tif-image/","link":"","permalink":"https://zhouyanbo.com/2017/09/11/php-handle-tif-image/","excerpt":"","text":"工作中需要处理图片，格式包括png、jpg、svg、gif、tif、eps，等等。。。 前面几种还知道第一次听说还有tif、eps格式的图片，看来还是见识少啊 在网上找资料发现很少有处理这两种格式的图片的，尤其是eps，最后找到imagemagick，看了介绍之后觉得真是功能强大啊，无所不能 具体安装及使用方法见官网 使用过程中发现用convert命令对tif图片处理时，会在目录下生成不止一个图片 1convert -resize 200 image.tif target_path 查资料发现tif是有图层的，一个tif图片可能会有多个layer，如果只要想生成一个图片的话，修改命令如下 1convert -resize 200 image.tif[0] target_path","categories":[],"tags":[{"name":"php","slug":"php","permalink":"https://zhouyanbo.com/tags/php/"}],"keywords":[]},{"title":"记录一次找bug经历（一）","slug":"mysql-timestamp-auto-update","date":"2017-09-11T08:07:35.000Z","updated":"2020-09-09T07:25:09.974Z","comments":true,"path":"2017/09/11/mysql-timestamp-auto-update/","link":"","permalink":"https://zhouyanbo.com/2017/09/11/mysql-timestamp-auto-update/","excerpt":"","text":"起因A：发现一个bugB：什么bugA：我们项目中（测试环境）有个接口时间会自动跟着更新时间变动，但是在本地测试是好的B：详细描述下呢A：有个发布动态的功能，其中有发布时、更新时间、新闻时间三个字段，当在后台通过审核后，新闻时间会跟着更新时间一起变B：有没有检查代码有什么不同呢A：检查过了，本地跟线上的代码版本一致B：有没有考虑过哪里出了问题A：看一下线上的数据表吧，感觉数据表有问题B：当时更新数据表是跟本地同步的啊，不能出问题啊，等我有时间看下吧 解决过程由于当时忙，想了下，没想到啥原因，简单看了下代码，确实没问题，暂时放一放了，晚上找到运维看了下线上数据库 1时间字段 timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP what？？？ 不知道怎么这个字段加了在更新的时候修改为当前时间，今后要注意这种小细节，好在这次找bug的时间没有很长 总结当把数据表字段设置成 dafault CURRENT_TIMESTAMP 会在数据插入的时候，自动设置成当前时间 数据表中时间字段更新的方法 在代码中更新字段 设置字段的Extra列on update CURRENT_TIMESTAMP 设置mysql定时任务","categories":[],"tags":[{"name":"mysql","slug":"mysql","permalink":"https://zhouyanbo.com/tags/mysql/"}],"keywords":[]},{"title":"install centos 7 failed","slug":"install-centos-7","date":"2017-08-11T02:49:37.000Z","updated":"2020-09-09T07:25:12.512Z","comments":true,"path":"2017/08/11/install-centos-7/","link":"","permalink":"https://zhouyanbo.com/2017/08/11/install-centos-7/","excerpt":"","text":"起因最近公司新购几台服务器，需要先装好系统再拿到机房，前面两台430服务器安装系统都很顺利，在安装第三台730XD的时候报错failed to start switch root 解决经过检查，是由于找不到U盘加载不到镜像导致这个错误，730服务器上三个USB插孔（前面一个后面两个），不知道前后有什么区别 方案 在启动界面，按e进入编辑模式， 修改启动参数 vmlinuz initrd=initrd.img linux dd quiet 重启会列出所有磁盘，包括U盘盘符，一般U盘会是/dev/sdb，或者/dev/sda，但是我发现这次U盘是/dev/sdc4 接着重启，重新进入编辑模式，修改启动参数 vmlinuz initrd=initrd.img inst.stage2=hd:/dev/sdc4 quiet 根据实际情况修改盘符 ctrl + x 执行就能顺利看到安装界面","categories":[],"tags":[{"name":"linux","slug":"linux","permalink":"https://zhouyanbo.com/tags/linux/"}],"keywords":[]},{"title":"Hexo 问题记录","slug":"hexo-issues","date":"2017-08-04T08:18:55.000Z","updated":"2020-09-09T07:25:15.547Z","comments":true,"path":"2017/08/04/hexo-issues/","link":"","permalink":"https://zhouyanbo.com/2017/08/04/hexo-issues/","excerpt":"","text":"Q: hexo deploy会发布整个项目到git master分支A: 删除项目根目录下的 .git 文件夹 Q: 删除.git文件夹后再hexo deploy报错 fatal: Not a git repository (or any of the parent directories): .gitA: 删除项目根目录下的 .deploy 文件夹","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://zhouyanbo.com/tags/hexo/"}],"keywords":[]},{"title":"CURL File","slug":"curl-file","date":"2017-03-16T02:21:06.000Z","updated":"2020-09-09T07:25:17.327Z","comments":true,"path":"2017/03/16/curl-file/","link":"","permalink":"https://zhouyanbo.com/2017/03/16/curl-file/","excerpt":"","text":"场景 laravel 框架 上传图片需要通过API接口传到图片服务器上 方案采用curl的方式，在PHP版本大于5.5.0需要用到CURLFile类 12345678910111213141516171819202122function curlPost($url, $postData, $post = 1)&#123; $curl = curl_init(); curl_setopt($curl, CURLOPT_POST, $post); curl_setopt($curl, CURLOPT_URL, $url); curl_setopt($curl, CURLOPT_RETURNTRANSFER, true); curl_setopt($curl, CURLOPT_HEADER, 0); if ($postData) &#123; curl_setopt($curl, CURLOPT_POSTFIELDS, $postData); &#125; $data = curl_exec($curl); $httpcode = curl_getinfo($curl, CURLINFO_HTTP_CODE); curl_close($curl); if ($httpcode == 200) &#123; return $data; &#125; else &#123; return $httpcode; &#125;&#125; 在调用方法的时候第二个参数是个数组，API接口参数file123array( 'file' =&gt; new \\CURLFile($path)) 若同时上传多个文件，如下1234array( 'file[0]' =&gt; new \\CURLFile($path1), 'file[1]' =&gt; new \\CURLFile($path2)));","categories":[],"tags":[{"name":"php","slug":"php","permalink":"https://zhouyanbo.com/tags/php/"}],"keywords":[]},{"title":"数据库保存emoji表情","slug":"save-emoji","date":"2017-03-06T03:56:01.000Z","updated":"2020-09-09T07:26:52.323Z","comments":true,"path":"2017/03/06/save-emoji/","link":"","permalink":"https://zhouyanbo.com/2017/03/06/save-emoji/","excerpt":"","text":"问题mysql保存emoji表情的时候，插入到数据库为问号或者无法插入 原因是由于mysql的utf-8编码最多三个字节，而emoji表情是四个字节，导致插入错误 解决方案修改数据库设置字符集 1ALTER DATABASE database_name CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci; 修改数据表字符集 1ALTER TABLE table_name CONVERT TO CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci; 修改字段名字符集 1ALTER TABLE table_name CHANGE column_name VARCHAR(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci; 数据库连接方式参数设置在laravel框架中修改database.php 12'charset' =&gt; 'utf8mb4','collation' =&gt; 'utf8mb4_unicode_ci',","categories":[],"tags":[{"name":"php","slug":"php","permalink":"https://zhouyanbo.com/tags/php/"}],"keywords":[]},{"title":"Coding-Specification","slug":"Specification","date":"2017-01-23T01:39:06.000Z","updated":"2020-09-09T07:27:14.167Z","comments":true,"path":"2017/01/23/Specification/","link":"","permalink":"https://zhouyanbo.com/2017/01/23/Specification/","excerpt":"编写目的 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;为了更好的提高技术部的工作效率，保证开发的有效性和合理性，并可最大程度的提高程序代码的可读性和可重复利用性，指定此规范。开发团队根据自己的实际情况，可以对本规范进行补充或裁减。本规则会不断的进行适当的改进，以适应最新的开发环境。 程序员可以了解任何代码，弄清程序的状况； 新人可以很快的适应环境； 防止新接触PHP的人出于节省时间的需要，自创一套风格并养成终生的习惯； 防止新接触PHP的人一次次的犯同样的错误； 在一致的环境下，人们可以减少犯错的机会；","text":"编写目的 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;为了更好的提高技术部的工作效率，保证开发的有效性和合理性，并可最大程度的提高程序代码的可读性和可重复利用性，指定此规范。开发团队根据自己的实际情况，可以对本规范进行补充或裁减。本规则会不断的进行适当的改进，以适应最新的开发环境。 程序员可以了解任何代码，弄清程序的状况； 新人可以很快的适应环境； 防止新接触PHP的人出于节省时间的需要，自创一套风格并养成终生的习惯； 防止新接触PHP的人一次次的犯同样的错误； 在一致的环境下，人们可以减少犯错的机会； 整体要求 技术部php开发规范将参照PEAR的规范，基本采用PEAR指定的规范，在其基础上增加、修改或删除部分适合具体开发环境的规范 本规范包含了PHP开发时程序编码中命名规范、代码缩进规则、控制结构、函数调用、函数定义、注释等方面的规则。 编码规范一、命名规范 1、普通变量命名遵循以下规则 所有字母都使用小写 对于一个变量使用多个单词的，使用驼峰结构命名，即以小写字母开头，从第二个单词开始，每个单词的第一个字母大写 2、PHP中类命名遵循以下规则 以大写字母开头 多个单词组成的变量名，单词之间不用间隔，各个单词首字母大写 例子：class MyClass 或 class DbOracle等 3、方法或函数命名遵循以下规则 首字母小写 多个单词间不使用间隔，除第一个单词外，其他单词首字母大写 function myFunction() 或 function myDbOracle()等 4、数据库字段命名遵循以下规范： 全部使用小写； 多个单词间使用_间隔。 二、书写规范 1、在书写代码的时候，必须注意代码的缩进规则，我们规定代码缩进规则如下： 使用4个空格作为缩进，而不使用tab缩进（对于ultraedit，可以进行预先设置） 2、大括号{}书写规则 在程序中进行结构控制代码编写，如if、for、while、switch等结构，大括号传统的有两种书写习惯，分别如下： { 直接跟在控制语句之后，不换行，如： 123for($i = 0; $i &lt; $count; $i++) &#123; echo 'test';&#125; { 在控制语句下一行，如： 1234for($i = 0; $i &lt; $count; $i++) &#123;&#123; echo 'test';&#125; 其中，第一种是PEAR建议的方式，但是从实际书写中来讲，这并不影响程序的规范和影响用phpdoc实现文档，所以可以根据个人习惯来采用上面的两种方式，但是要求在同一个程序中，只使用其中一种，以免造成阅读的不方便。 3、小括号、关键词和函数遵循以下规则： 小括号和函数名间没有空格；如$test = date(“ymdhis”)； 除非必要，不要在Return返回语句中使用小括号。 如Return $a； 4、在程序中=符号的书写遵循以下规则： 在=符号的两侧，均需留出一个空格；如 $a = $b 、$a = ‘test’等； 在=符号与!、=、&lt;、&gt;等符号相邻时，不需留一个空格；如 if ( $a == $b ) 、if ( $a != $b ) 等； 5、对于控制结构的书写遵循以下规则： switch结构中必须要有default块； 在 for 和 wiile 的循环使用中，要警惕 continue 、 break 的使用，避免产生类似 goto 的问题； 6、如果要在类里面编写构造函数，必须遵循以下规则： 不能在构造函数中有太多实际操作，顶多用来初始化一些值和变量； 不能在构造函数中因为使用操作而返回false或者错误，因为在声明和实例化一个对象的时候，是不能返回错误的； 7、IF语句遵循以下规则： 不能使用 1/0 代替 true/false，在 PHP 中，这是不相等的； 不要使用非零的表达式、变量或者方法直接进行 true/false 判断，而必须使用严格的完整 true/false 判断； 如：不使用 if ( $a ) 或者 if ( checka() ) 而使用 if ( FALSE != $a ) 或者 if ( FALSE != check() ) 8、引号 PHP中单引号和双引号具有不同的含义，最大的几项区别如下： 单引号中，任何变量($var)、特殊转义字符(如“\\t \\r \\n”等)不会被解析，因此PHP的解析速度更快，转义字符仅仅支持“\\’”和“\\\\”这样对单引号和反斜杠本身的转义； 双引号中，变量(\\$var)值会代入字符串中，特殊转义字符也会被解析成特定的单个字符，还有一些专门针对上述两项特性的特殊功能性转义，例如“\\\\$”和“{$array[‘key’]}。这样虽然程序编写更加方便，但同时PHP的解析也很慢； 数组中，如果下标不是整型，而是字符串类型，请务必用单引号将下标括起，正确的写法为\\$array[‘key’]，而不是$array[key]，因为不正确的写法会使PHP解析器认为key是一个常量，进而先判断常量是否存在，不存在时才以“key”作为下标带入表达式中，同时出发错误事件，产生一条Notice级错误。因此，在绝大多数可以使用单引号的场合，禁止使用双引号。依据上述分析，可以或必须使用单引号的情况包括但不限于下述：1.字符串为固定值，不包含“\\t”等特殊转义字符；2.数组的固定下标，例如\\$array[‘key’]表达式中不需要带入变量，例如\\$string = ‘test’;，而非\\$string = “test$var”； 三、注释 程序中变量或者语句的注释遵循以下原则： 写在变量或者语句的前面一行，而不写在同行或者后面； 注释采用/ /的方式； 每个函数前面要包含一个注释块。内容包括函数功能简述，输入/输出参数，预期的返回值，出错代码定义； 注释完整规范； 把已经注释掉的代码删除，或者注明这些已经注释掉的代码仍然保留在源码中的特殊原因。","categories":[],"tags":[{"name":"php","slug":"php","permalink":"https://zhouyanbo.com/tags/php/"}],"keywords":[]},{"title":"数学分析一","slug":"Math-Part1","date":"2017-01-18T08:01:31.000Z","updated":"2020-09-09T07:25:11.087Z","comments":true,"path":"2017/01/18/Math-Part1/","link":"","permalink":"https://zhouyanbo.com/2017/01/18/Math-Part1/","excerpt":"概述本次分享为一些基础知识，介绍一些数学中广泛采用的术语与符号，以及几个基本的概念，为今后的学习做铺垫。 概念 集合 由确定的一些对象汇集的总体 子集 组成集合的这些对象称为集合的元素 x是集合E的元素记作:x∈Ex \\in Ex∈E(读作: x属于E) y不是集合E的元素记作:y∉Ey \\notin Ey∉E(读作: y不属于E)","text":"概述本次分享为一些基础知识，介绍一些数学中广泛采用的术语与符号，以及几个基本的概念，为今后的学习做铺垫。 概念 集合 由确定的一些对象汇集的总体 子集 组成集合的这些对象称为集合的元素 x是集合E的元素记作:x∈Ex \\in Ex∈E(读作: x属于E) y不是集合E的元素记作:y∉Ey \\notin Ey∉E(读作: y不属于E) 集合的关系 E的任何元素都是集合F的元素，E是F的子集，记作E⊂FE \\subset FE⊂F(读作: E包含于F) 两个集合相等记作 E = F 一个特殊的集合，空集：不包含任何元素的集合ϕ\\phiϕ 集合的运算 E⋃FE \\bigcup FE⋃F 由E的所有元素与F的所有元素合在一起组成的集合（并集） E⋂FE \\bigcap FE⋂F 由E和F共同的元素组成的集合 （交集） E∖FE \\setminus FE∖F 由属于E但不属于F的元素组成的集合 （差集） 区间 开区间(a,b) 表示 a &lt; x &lt; b 左开右闭区间(a,b] 表示 a &lt; x ≤ b 左闭右开区间[a,b) 表示 a ≤ x &lt; b 闭区间[a,b] 表示 a ≤ x ≤ b 逻辑符号 α 和 β是两个判断，当α成立的时候，β也成立，我们说α 能推导出 β，记作α⇒β\\alpha \\Rightarrow \\betaα⇒β 如果 α⇒β,\\alpha \\Rightarrow \\beta ,α⇒β, 并且 β⇒α\\beta \\Rightarrow \\alphaβ⇒α 那 α\\alphaα 与 β\\betaβ 等价, 记作α⇔β\\alpha \\Leftrightarrow \\betaα⇔β 函数 变量y随着变量x的变化而变化 映射 对变量x的任何一个值，有变量y的唯一确定的值与之对应 如果D中的任何一个元素，有集合E中的唯一一个元素与之对应，那么f就是从D到E的一个映射，记为 f:D→E\\begin{aligned} f : D \\rightarrow E \\end{aligned}​f:D→E​​ 元素之间的对应关系如下表示 f : x ↦ x2{x}^{2}x​2​​假设 f:D→Ef : D \\rightarrow Ef:D→E 是一个映射，g:G→Hg : G \\rightarrow Hg:G→H也是一个映射，如果f(D)⊂G,f(D)\\subset G,f(D)⊂G,那么从ξ∈D\\xi \\in Dξ∈D开始，相继经过f和g的作用，得到g(f(ξ))g(f(\\xi))g(f(ξ))这样的关系ξ↦g(f(ξ))\\xi \\mapsto g(f(\\xi))ξ↦g(f(ξ)) 对于映射 f⋅gf\\cdot gf⋅g 和 g⋅fg\\cdot fg⋅f 不一定都有意义，有意义也不一定相同比如 f(x)=x2,g(x)=sinxf(x)={x}^{2},g(x)=sinxf(x)=x​2​​,g(x)=sinx g⋅f(x)=sinx2,f⋅g(x)=(sinx)2\\begin{aligned} g\\cdot f(x) = sin{x}^{2}, f\\cdot g(x) = {(sinx)}^{2} \\end{aligned}​g⋅f(x)=sinx​2​​,f⋅g(x)=(sinx)​2​​​​ 计算 计算下面的式子∑k=1n(kp−(k−1)p)\\sum_{k=1}^{n}({k}^{p}-{(k-1)^{p}})∑​k=1​n​​(k​p​​−(k−1)​p​​) =(1p−0p)+(2p−1p)+⋅⋅⋅+(np−(n−1)p)∑k=1n(kp−(k−1)p)=np\\begin{aligned} =({1}^{p} - {0}^{p})+({2}^{p}-{1}^{p})+ \\cdot \\cdot \\cdot + ({n}^{p}-{(n-1)}^{p}) \\\\ \\sum_{k=1}^{n}({k}^{p}-{(k-1)^{p}}) = {n}^{p} \\end{aligned}​=(1​p​​−0​p​​)+(2​p​​−1​p​​)+⋅⋅⋅+(n​p​​−(n−1)​p​​)​​k=1​∑​n​​(k​p​​−(k−1)​p​​)=n​p​​​​ 计算1+2+3…+n由恒等式k2−(k−1)2=2k−1{k}^{2}-{(k-1)}^{2} = 2k-1k​2​​−(k−1)​2​​=2k−1取k=1,2,3,4…n,相加得到 ∑k=1n(k2−(k−1)2)=2∑k=1nk−∑k=1n1n2=2∑k=1nk−n,∑k=1nk=12n2+12n=n(n+1)2\\begin{aligned} \\sum_{k=1}^{n}({k}^{2}-{(k-1)}^{2}) &amp;=2\\sum_{k=1}^{n}k-\\sum_{k=1}^n1 \\\\ {n}^{2} &amp;= 2\\sum_{k=1}^{n}k-n,\\\\ \\sum_{k=1}^{n}k &amp;= \\frac{1}{2}{n}^{2}+\\frac{1}{2}n \\\\ &amp; = \\frac{n(n+1)}{2} \\end{aligned}​​k=1​∑​n​​(k​2​​−(k−1)​2​​)​n​2​​​​k=1​∑​n​​k​​​​=2​k=1​∑​n​​k−​k=1​∑​n​​1​=2​k=1​∑​n​​k−n,​=​2​​1​​n​2​​+​2​​1​​n​=​2​​n(n+1)​​​​ 计算不规则图形的面积假设坐标轴上有一条曲线，计算这条曲线与x轴y轴组成得面积，假设这个图形由y=xp{x}^{p}x​p​​, OX轴和直线x=b围城，求这个图形得面积我们把[0,b]分成n等份，那第k个等分时 [k−1nb,kn]k−1nb≤x≤knb,0≤y≤xp,k=1,2,3...,n\\begin{aligned} [\\frac{k-1}{n}b, \\frac{k}{n}] \\frac{k-1}{n}b\\leq x \\leq \\frac{k}{n}b, 0\\leq y \\leq {x}^{p}, k=1,2,3...,n \\end{aligned}​[​n​​k−1​​b,​n​​k​​]​n​​k−1​​b≤x≤​n​​k​​b,0≤y≤x​p​​,k=1,2,3...,n​​ 那每一个条形得面积Sk{S}_{k}S​k​​满足 (k−1nb)p⋅bn≤Sk≤(knb)p⋅bn{(\\frac{k-1}{n}b)}^{p}\\cdot \\frac{b}{n}\\leq{S}_{k}\\leq{(\\frac{k}{n}b)}^{p}\\cdot\\frac{b}{n}(​n​​k−1​​b)​p​​⋅​n​​b​​≤S​k​​≤(​n​​k​​b)​p​​⋅​n​​b​​ 那么曲线的面积S满足 ∑k=1n(k−1nb)p⋅bn≤Sk≤∑k=1n(knb)p⋅bn\\sum_{k=1}^{n}{(\\frac{k-1}{n}b)}^{p}\\cdot \\frac{b}{n}\\leq{S}_{k}\\leq\\sum_{k=1}^{n}{(\\frac{k}{n}b)}^{p}\\cdot\\frac{b}{n}∑​k=1​n​​(​n​​k−1​​b)​p​​⋅​n​​b​​≤S​k​​≤∑​k=1​n​​(​n​​k​​b)​p​​⋅​n​​b​​ 当n无限大时，近似值的精确度就越高，那么两个数的极限可以看作面积S求的它们共同的极限为 bp+1p+1\\frac{b^{p+1}}{p+1}​p+1​​b​p+1​​​​得到 S=bp+1p+1S=\\frac{b^{p+1}}{p+1}S=​p+1​​b​p+1​​​​","categories":[],"tags":[{"name":"math","slug":"math","permalink":"https://zhouyanbo.com/tags/math/"}],"keywords":[]}]}